{"meta":{"version":1,"warehouse":"5.0.1"},"models":{"Asset":[{"_id":"source/img/img.png","path":"img/img.png","modified":0,"renderable":0},{"_id":"themes/butterfly/source/css/index.styl","path":"css/index.styl","modified":0,"renderable":1},{"_id":"themes/butterfly/source/css/var.styl","path":"css/var.styl","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/tw_cn.js","path":"js/tw_cn.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/favicon.png","path":"img/favicon.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/404.jpg","path":"img/404.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/friend_404.gif","path":"img/friend_404.gif","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/search/algolia.js","path":"js/search/algolia.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/search/local-search.js","path":"js/search/local-search.js","modified":0,"renderable":1},{"_id":"source/img/cover/0.jpg","path":"img/cover/0.jpg","modified":0,"renderable":0},{"_id":"source/img/cover/1.jpg","path":"img/cover/1.jpg","modified":0,"renderable":0},{"_id":"source/img/cover/10.jpg","path":"img/cover/10.jpg","modified":0,"renderable":0},{"_id":"source/img/cover/11.jpg","path":"img/cover/11.jpg","modified":0,"renderable":0},{"_id":"source/img/cover/12.jpg","path":"img/cover/12.jpg","modified":0,"renderable":0},{"_id":"source/img/cover/13.jpg","path":"img/cover/13.jpg","modified":0,"renderable":0},{"_id":"source/img/cover/14.jpg","path":"img/cover/14.jpg","modified":0,"renderable":0},{"_id":"source/img/cover/15.jpg","path":"img/cover/15.jpg","modified":0,"renderable":0},{"_id":"source/img/cover/16.jpg","path":"img/cover/16.jpg","modified":0,"renderable":0},{"_id":"source/img/cover/17.jpg","path":"img/cover/17.jpg","modified":0,"renderable":0},{"_id":"source/img/cover/2.jpg","path":"img/cover/2.jpg","modified":0,"renderable":0},{"_id":"source/img/cover/3.jpg","path":"img/cover/3.jpg","modified":0,"renderable":0},{"_id":"source/img/cover/4.jpg","path":"img/cover/4.jpg","modified":0,"renderable":0},{"_id":"source/img/cover/5.jpg","path":"img/cover/5.jpg","modified":0,"renderable":0},{"_id":"source/img/cover/6.jpg","path":"img/cover/6.jpg","modified":0,"renderable":0},{"_id":"source/img/cover/7.jpg","path":"img/cover/7.jpg","modified":0,"renderable":0},{"_id":"source/img/cover/8.jpg","path":"img/cover/8.jpg","modified":0,"renderable":0},{"_id":"source/img/cover/9.jpg","path":"img/cover/9.jpg","modified":0,"renderable":0},{"_id":"source/img/index.jpg","path":"img/index.jpg","modified":0,"renderable":0},{"_id":"source/img/404.png","path":"img/404.png","modified":0,"renderable":0}],"Cache":[{"_id":"source/categories/index.md","hash":"8e37694a06ca035dfdeff2478d294f769c591a8f","modified":1717395986095},{"_id":"source/_posts/hello-world.md","hash":"58e7696d7ecfcb938807c23056e79965d8ccfece","modified":1717468225282},{"_id":"source/.DS_Store","hash":"6974ddb0953597b845d10c3aec9016f9ed161fbb","modified":1716450209127},{"_id":"source/friends/index.md","hash":"4af7e3f29529d21dc874a040d7d44d846d626a59","modified":1716621446890},{"_id":"source/img/img.png","hash":"62efbec711ae4f6dcb2f9e0ec6bc0b6786855ac0","modified":1716630090035},{"_id":"source/_posts/network/acme.sh域名自动化更新证书.md","hash":"49e22c8c4feeb6b3976555a62ff47ca792f5aad4","modified":1717087443126},{"_id":"source/about/index.md","hash":"8db62735fe3d535195093e083d78a6d0d1944dee","modified":1717396065699},{"_id":"source/tags/index.md","hash":"4d7a0fdf830dda843cb7f16b29093c6495bb3e83","modified":1717396061476},{"_id":"source/_posts/hexo/使用hexo和git实现多地更新和配置博客源文件.md","hash":"1709eb9672365fd24f4b0d49a73e5d352680e257","modified":1717396347300},{"_id":"themes/butterfly/LICENSE","hash":"1128f8f91104ba9ef98d37eea6523a888dcfa5de","modified":1716626729898},{"_id":"themes/butterfly/package.json","hash":"314b0271ba3f668d0d6081b499b2d24e90dab25e","modified":1716626729906},{"_id":"themes/butterfly/README.md","hash":"4e01b47448d9f3a02afc04eef644e2321253f6f4","modified":1716626729898},{"_id":"themes/butterfly/README_CN.md","hash":"148da187d16033624ceccce8b8561835296f5a5a","modified":1716626729898},{"_id":"themes/butterfly/.github/FUNDING.yml","hash":"da5e77f5e0cdb7e11b36546fb6796d10e3dfbe5d","modified":1716626729898},{"_id":"themes/butterfly/_config.yml","hash":"39fbabbbf1e89dd82a6ea21517c6c24b49e4dd98","modified":1716626729898},{"_id":"themes/butterfly/layout/archive.pug","hash":"bb32c9c476372de747dfa563b83f77d7a917a77d","modified":1716626729899},{"_id":"themes/butterfly/languages/zh-TW.yml","hash":"03629d1d13a7be09d4933aa5dc0dcbe45e79140c","modified":1716626729899},{"_id":"themes/butterfly/layout/category.pug","hash":"710708cfdb436bc875602abf096c919ccdf544db","modified":1716626729899},{"_id":"themes/butterfly/languages/zh-CN.yml","hash":"5004faee365139521f161babd66649a8107e4008","modified":1716626729899},{"_id":"themes/butterfly/plugins.yml","hash":"d807fbb62163bb6fc5a83a24ebd69ac14cf45f67","modified":1716626729906},{"_id":"themes/butterfly/layout/page.pug","hash":"baf469784aef227e4cc840550888554588e87a13","modified":1716626729906},{"_id":"themes/butterfly/languages/en.yml","hash":"af5603b1a888f167dc80be6d53a19437b5cf6bef","modified":1716626729899},{"_id":"themes/butterfly/layout/index.pug","hash":"e1c3146834c16e6077406180858add0a8183875a","modified":1716626729906},{"_id":"themes/butterfly/layout/post.pug","hash":"fc9f45252d78fcd15e4a82bfd144401cba5b169a","modified":1716626729906},{"_id":"themes/butterfly/layout/tag.pug","hash":"0440f42569df2676273c026a92384fa7729bc4e9","modified":1716626729906},{"_id":"themes/butterfly/languages/default.yml","hash":"90a6dc361de67532437d819a55ec64945ca5404b","modified":1716626729899},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/bug_report.yml","hash":"6e34b565ea013812d5e363b6de5fa1f9078d4e12","modified":1716626729898},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/config.yml","hash":"7b4831ae8f8f8c55dd1b856781210c517c63e6dd","modified":1716626729898},{"_id":"themes/butterfly/.github/workflows/publish.yml","hash":"05857c2f265246d8de00e31037f2720709540c09","modified":1716626729898},{"_id":"themes/butterfly/layout/includes/404.pug","hash":"cb49f737aca272ccfeb62880bd651eccee72a129","modified":1716626729899},{"_id":"themes/butterfly/layout/includes/head.pug","hash":"ecec62305aaa596bb1dfbb46c13d06fb5a9628cf","modified":1716626729899},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/feature_request.yml","hash":"996640605ed1e8e35182f0fd9a60a88783b24b03","modified":1716626729898},{"_id":"themes/butterfly/.github/workflows/stale.yml","hash":"ac62b989b5550c756e1986fcc68f243170705383","modified":1716626729898},{"_id":"themes/butterfly/scripts/events/404.js","hash":"83cd7f73225ccad123afbd526ce1834eb1eb6a6d","modified":1716626729906},{"_id":"themes/butterfly/layout/includes/footer.pug","hash":"93a7f11ba0eea6d0e492d66c86e9ee983a272300","modified":1716627256739},{"_id":"themes/butterfly/scripts/events/cdn.js","hash":"21fb5aabe043486d095c4c8cce361ed85ba88a26","modified":1716626729906},{"_id":"themes/butterfly/scripts/events/comment.js","hash":"5351e0bc09e6b5b3f6d30f333a2520626a28ca3a","modified":1716626729906},{"_id":"themes/butterfly/scripts/events/init.js","hash":"428b94c7b9e83f7ea36227dee66bfe3c23aee4a8","modified":1716626729906},{"_id":"themes/butterfly/layout/includes/additional-js.pug","hash":"aca0ec7ef69b21d1f242c62fed389468a0f0e1a2","modified":1716626729899},{"_id":"themes/butterfly/layout/includes/layout.pug","hash":"7fa9ae4b70b87fc97e992dde5944681f92b59bea","modified":1716626729900},{"_id":"themes/butterfly/scripts/events/merge_config.js","hash":"2ac43fd4103ba3c6897da7c13015cb05f39fd695","modified":1716626729906},{"_id":"themes/butterfly/scripts/events/stylus.js","hash":"e196a99733d7f90899bceed5d12488e8234817d5","modified":1716626729907},{"_id":"themes/butterfly/scripts/events/welcome.js","hash":"8ad9911b755cba13dde2cc055c3f857a6b0dd20e","modified":1716626729907},{"_id":"themes/butterfly/scripts/helpers/aside_categories.js","hash":"96f861151e3b889ef0ffe78821d489ad2625ee43","modified":1716626729907},{"_id":"themes/butterfly/scripts/helpers/aside_archives.js","hash":"2ec66513d5322f185d2071acc052978ba9415a8e","modified":1716626729907},{"_id":"themes/butterfly/scripts/helpers/findArchiveLength.js","hash":"7caf549810f971c34196fb9deac2d992545bdff9","modified":1716626729907},{"_id":"themes/butterfly/scripts/helpers/inject_head_js.js","hash":"d5c7e61257b08a9648404f6f48ce4d471cd5fa55","modified":1716626729907},{"_id":"themes/butterfly/scripts/filters/random_cover.js","hash":"a8eef3f37428436554f58a2b6bac7c255fbdf38d","modified":1716626729907},{"_id":"themes/butterfly/scripts/filters/post_lazyload.js","hash":"860f967ecf3c6a6ea785b560a7aae4d0757cd18a","modified":1716626729907},{"_id":"themes/butterfly/scripts/helpers/series.js","hash":"821e973d41f7b3b64cde91e0e836ea49c43e3c06","modified":1716626729907},{"_id":"themes/butterfly/scripts/helpers/page.js","hash":"e2a8a09bfe47da26eab242a36f516e6c452c799a","modified":1716626729907},{"_id":"themes/butterfly/scripts/tag/flink.js","hash":"ab62919fa567b95fbe14889517abda649991b1ee","modified":1716626729907},{"_id":"themes/butterfly/scripts/tag/gallery.js","hash":"418684993a3a3a2ac534257a2d9ecbcead6808c1","modified":1716626729907},{"_id":"themes/butterfly/scripts/tag/hide.js","hash":"365db87ddfc582bf8c15cb440c48bed95106e4b1","modified":1716626729907},{"_id":"themes/butterfly/scripts/tag/inlineImg.js","hash":"512c68a22ae4a58d6a6b24b368a0c00c2ccb4fcb","modified":1716626729907},{"_id":"themes/butterfly/scripts/tag/label.js","hash":"19773218877281ccffed921431e87148413a7c20","modified":1716626729907},{"_id":"themes/butterfly/scripts/tag/mermaid.js","hash":"5c2a07df5874b5377540884e4da14dd21489378f","modified":1716626729908},{"_id":"themes/butterfly/scripts/tag/button.js","hash":"93229d44b35b9da92e647b89d6d3087085974a29","modified":1716626729907},{"_id":"themes/butterfly/scripts/helpers/related_post.js","hash":"4677be4175da6800c0b3b8c1614e593f73df8831","modified":1716626729907},{"_id":"themes/butterfly/scripts/tag/note.js","hash":"1acefc59ead75ebd8cafee36efc7da4fa426d088","modified":1716626729908},{"_id":"themes/butterfly/scripts/tag/score.js","hash":"5cb273e95846874e3a58074074c501df23c5e912","modified":1716626729908},{"_id":"themes/butterfly/scripts/tag/timeline.js","hash":"4526c75e5bf84609d67e92b6af3524bcb278e852","modified":1716626729908},{"_id":"themes/butterfly/layout/includes/pagination.pug","hash":"4c85de4dea4dca4e5088097a79bd6d7009cbf8ef","modified":1716626729901},{"_id":"themes/butterfly/scripts/tag/tabs.js","hash":"ffc62222f8d7b4d44c1c0726c8a08824a2201039","modified":1716626729908},{"_id":"themes/butterfly/scripts/tag/series.js","hash":"830b1d592278b9f676df0cf9a91b1eeda2456aec","modified":1716626729908},{"_id":"themes/butterfly/layout/includes/sidebar.pug","hash":"9f0e9e039f304439007460fa0a7c8ac18e0ffd37","modified":1716626729901},{"_id":"themes/butterfly/layout/includes/rightside.pug","hash":"db275f7fbe4438b54cd813b695f4834e10aa234f","modified":1716626729901},{"_id":"themes/butterfly/source/css/index.styl","hash":"755490867fd8afe47d5cce24faea2ca172b0c4dd","modified":1716626729911},{"_id":"themes/butterfly/source/css/var.styl","hash":"152b6bd4b6285165541a71f5a1c913f8ee6a602b","modified":1716626729911},{"_id":"themes/butterfly/source/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1716626729911},{"_id":"themes/butterfly/source/js/main.js","hash":"0dac585446445e0c419b86eec5580bc9b0657dc6","modified":1716626729912},{"_id":"themes/butterfly/source/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1716626729911},{"_id":"themes/butterfly/source/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1716626729911},{"_id":"themes/butterfly/layout/includes/header/index.pug","hash":"944d6e9dd50df3395f3a2c7ad9db667d50dea4ed","modified":1716626729900},{"_id":"themes/butterfly/layout/includes/header/menu_item.pug","hash":"31346a210f4f9912c5b29f51d8f659913492f388","modified":1716626729900},{"_id":"themes/butterfly/source/js/utils.js","hash":"8e6b48d294e7aeaba8ff6348c43b2271cf865547","modified":1716626729912},{"_id":"themes/butterfly/source/js/tw_cn.js","hash":"f8d2e3f31468991a7f5171cbfdb157dfb86d3372","modified":1716626729912},{"_id":"themes/butterfly/layout/includes/head/Open_Graph.pug","hash":"8aa8d799aedbfd811195b84a451bc4b6e2647c12","modified":1716626729899},{"_id":"themes/butterfly/layout/includes/header/nav.pug","hash":"f61659aa457d1a2d1baa3a13157996cfac4d6609","modified":1716626729900},{"_id":"themes/butterfly/layout/includes/header/social.pug","hash":"5de9a82032cdad1db3b868b797460921cd775fc2","modified":1716626729900},{"_id":"themes/butterfly/layout/includes/header/post-info.pug","hash":"f50e6a17073677933c5bc78481bf587a4a9e6da0","modified":1716626729900},{"_id":"themes/butterfly/layout/includes/head/config.pug","hash":"63fed4548367a3663cdbaffa1df48167b0a2397b","modified":1716626729899},{"_id":"themes/butterfly/layout/includes/head/analytics.pug","hash":"67e1c3b48e4ca7ee0b2c76d3ca7476b9883cf105","modified":1716626729899},{"_id":"themes/butterfly/layout/includes/head/config_site.pug","hash":"7df90c8e432e33716517ab918b0a125bc284041b","modified":1716626729899},{"_id":"themes/butterfly/layout/includes/head/pwa.pug","hash":"3d492cfe645d37c94d30512e0b230b0a09913148","modified":1716626729900},{"_id":"themes/butterfly/layout/includes/head/preconnect.pug","hash":"5208fe1e75d97a05fd9bdd6cc53c59d8b741b94b","modified":1716626729900},{"_id":"themes/butterfly/layout/includes/loading/fullpage-loading.pug","hash":"9e8c5788602b29a527ef35fe8a20076a5fa969bd","modified":1716626729900},{"_id":"themes/butterfly/layout/includes/loading/index.pug","hash":"131f344d68b4c241d6e03849b243ee792fcd3cea","modified":1716626729900},{"_id":"themes/butterfly/layout/includes/head/site_verification.pug","hash":"e2e8d681f183f00ce5ee239c42d2e36b3744daad","modified":1716626729900},{"_id":"themes/butterfly/layout/includes/loading/pace.pug","hash":"6ab4e301c92586505d6cddce1b3ad23b7c79010d","modified":1716626729900},{"_id":"themes/butterfly/layout/includes/page/categories.pug","hash":"5276a8d2835e05bd535fedc9f593a0ce8c3e8437","modified":1716626729901},{"_id":"themes/butterfly/layout/includes/page/tags.pug","hash":"9621991359e22b14049346f1cf87bdedc94edf5a","modified":1716626729901},{"_id":"themes/butterfly/layout/includes/head/google_adsense.pug","hash":"95a37e92b39c44bcbea4be7e29ddb3921c5b8220","modified":1716626729899},{"_id":"themes/butterfly/layout/includes/post/post-copyright.pug","hash":"5574804fdea5edf7fd52aad2caf030614d5e7f2f","modified":1716626729901},{"_id":"themes/butterfly/layout/includes/post/reward.pug","hash":"a096ff8eb6b2a22395be881f827ff2a686ba5596","modified":1716626729901},{"_id":"themes/butterfly/layout/includes/page/flink.pug","hash":"f9ce83978b217a71a2eb8761dc14b09866faa3f4","modified":1716626729901},{"_id":"themes/butterfly/layout/includes/page/default-page.pug","hash":"12c65c174d26a41821df9bad26cdf1087ec5b0ca","modified":1716626729901},{"_id":"themes/butterfly/layout/includes/mixins/article-sort.pug","hash":"90554c2ca5ba946f4c02e1bc5fe2859cef1b1594","modified":1716626729900},{"_id":"themes/butterfly/layout/includes/mixins/post-ui.pug","hash":"657f46ce39ecd0de948c9c70279ecfabb9808a25","modified":1717085176281},{"_id":"themes/butterfly/layout/includes/third-party/pangu.pug","hash":"0f024e36b8116118233e10118714bde304e01e12","modified":1716626729904},{"_id":"themes/butterfly/layout/includes/third-party/effect.pug","hash":"1d39670ee6225f85f5c53bf5c84f3fd6e19290e8","modified":1716626729904},{"_id":"themes/butterfly/layout/includes/third-party/prismjs.pug","hash":"ffb9ea15a2b54423cd4cd441e2d061b8233e9b58","modified":1716626729905},{"_id":"themes/butterfly/layout/includes/third-party/pjax.pug","hash":"12e57491e94fa00d953bbda9db0b6d6169e2358c","modified":1716626729904},{"_id":"themes/butterfly/layout/includes/third-party/subtitle.pug","hash":"8044b9c18b34b019ffe26b7383e7e80356b5e4b5","modified":1716626729905},{"_id":"themes/butterfly/layout/includes/widget/card_ad.pug","hash":"60dc48a7b5d89c2a49123c3fc5893ab9c57dd225","modified":1716626729905},{"_id":"themes/butterfly/layout/includes/widget/card_author.pug","hash":"03c6afabbf1ac729c7fb21c7ec06da0190b0fdc7","modified":1716626729905},{"_id":"themes/butterfly/layout/includes/widget/card_bottom_self.pug","hash":"13dc8ce922e2e2332fe6ad5856ebb5dbf9ea4444","modified":1716626729905},{"_id":"themes/butterfly/layout/includes/widget/card_categories.pug","hash":"d1a416d0a8a7916d0b1a41d73adc66f8c811e493","modified":1716626729905},{"_id":"themes/butterfly/layout/includes/widget/card_announcement.pug","hash":"ae392459ad401a083ca51ee0b27526b3c1e1faed","modified":1716626729905},{"_id":"themes/butterfly/layout/includes/widget/card_archives.pug","hash":"86897010fe71503e239887fd8f6a4f5851737be9","modified":1716626729905},{"_id":"themes/butterfly/layout/includes/third-party/aplayer.pug","hash":"c7cfade2b160380432c47eef4cd62273b6508c58","modified":1716626729902},{"_id":"themes/butterfly/layout/includes/widget/card_newest_comment.pug","hash":"7834bf7c711e739fd33cfcd0b53d151013b3d449","modified":1716626729905},{"_id":"themes/butterfly/layout/includes/widget/card_post_series.pug","hash":"bd5ad01277f8c6ddf8a3a29af1518e5fe6eed23f","modified":1716626729905},{"_id":"themes/butterfly/layout/includes/widget/card_tags.pug","hash":"eceb4420a64c720f0d2741e89d6229bbb3d87353","modified":1716626729906},{"_id":"themes/butterfly/layout/includes/widget/card_top_self.pug","hash":"ae67c6d4130a6c075058a9c1faea1648bcc6f83e","modified":1716626729906},{"_id":"themes/butterfly/layout/includes/widget/card_webinfo.pug","hash":"35ce167c5a275211bfc1fa3d49adfde5b404d98f","modified":1716626729906},{"_id":"themes/butterfly/layout/includes/widget/card_post_toc.pug","hash":"a658a274c5f7896ee5122725bee45548693bdd66","modified":1716626729906},{"_id":"themes/butterfly/layout/includes/widget/card_recent_post.pug","hash":"e5aac7b28ed4123d75797263c64e74ac547945bc","modified":1716626729906},{"_id":"themes/butterfly/layout/includes/widget/index.pug","hash":"66f7a8b0cebc05c575ec3cb70b08d6854029d87a","modified":1716626729906},{"_id":"themes/butterfly/source/css/_global/function.styl","hash":"f19694a42dbe28eda4b39a1696e8fbcd277bc76c","modified":1716626729908},{"_id":"themes/butterfly/source/css/_highlight/theme.styl","hash":"bcd384c8b2aa0390c9eb69ac1abbfd1240ce1da4","modified":1716626729908},{"_id":"themes/butterfly/source/css/_layout/aside.styl","hash":"fad650f88778b33a6358e38cf50dfafc0974d28f","modified":1716626729909},{"_id":"themes/butterfly/source/css/_global/index.styl","hash":"c8ff6ddd5bfe1190b7b8056b68ce41114fd79dcb","modified":1716626729908},{"_id":"themes/butterfly/source/css/_layout/chat.styl","hash":"f9a5d3f1fc5ed0ed2ee4c1eaa58ed650d11ddebd","modified":1716626729909},{"_id":"themes/butterfly/source/css/_highlight/highlight.styl","hash":"4dcd468e4d11a0ac75406162678feffcd89fee00","modified":1716626729908},{"_id":"themes/butterfly/source/css/_layout/post.styl","hash":"a2eb44fa5eaea1325319a2064439cf36d0f35a2f","modified":1716626729909},{"_id":"themes/butterfly/source/css/_layout/pagination.styl","hash":"fb9f78bfbb79579f1d752cb73fb6d25c8418e0fd","modified":1716626729909},{"_id":"themes/butterfly/source/css/_layout/relatedposts.styl","hash":"d53de408cb27a2e704aba7f7402b7caebe0410d8","modified":1716626729909},{"_id":"themes/butterfly/source/css/_layout/comments.styl","hash":"134811b2d696f9ed2c0cd578f3886f1c60770c0a","modified":1716626729909},{"_id":"themes/butterfly/source/css/_layout/reward.styl","hash":"d6cf26ffb8a0343eda1cde65b6b73b0ddbe8fcfc","modified":1716626729909},{"_id":"themes/butterfly/source/css/_layout/head.styl","hash":"18d08be0cd9b1f8c049d4b922e80f8163a55c947","modified":1716626729909},{"_id":"themes/butterfly/source/css/_layout/footer.styl","hash":"83a7a70eb0532ea9c4267939fe484af915fca01e","modified":1716626729909},{"_id":"themes/butterfly/source/css/_layout/loading.styl","hash":"ac2aeee9926f75b2a0098efe1c114126987430f2","modified":1716626729909},{"_id":"themes/butterfly/source/css/_layout/rightside.styl","hash":"f845b9b4efdee750f70c023aab27432611f83059","modified":1716626729909},{"_id":"themes/butterfly/source/css/_mode/darkmode.styl","hash":"0db591a1f4ed5adcb8668a549bbee5c9d62682cf","modified":1716626729909},{"_id":"themes/butterfly/source/css/_mode/readmode.styl","hash":"e549d24ad81a7d93326a509ff8dcfcc58c80729e","modified":1716626729909},{"_id":"themes/butterfly/source/css/_search/algolia.styl","hash":"649a054e73278b6724bd4dd9b94724791ec5c928","modified":1716626729910},{"_id":"themes/butterfly/source/css/_layout/sidebar.styl","hash":"b7a6a585dbc38d177c9aba75df3a467415d0488a","modified":1716626729909},{"_id":"themes/butterfly/source/css/_layout/third-party.styl","hash":"5556c9bf4f53a90cb9b4945cd76a8849bd67f3f3","modified":1716626729909},{"_id":"themes/butterfly/source/css/_search/local-search.styl","hash":"961589da3c0a532c4709a4a4ea96bd579257f766","modified":1716626729910},{"_id":"themes/butterfly/source/css/_search/index.styl","hash":"20a3134e1302b62bfc881f4ec43f398267111f22","modified":1716626729910},{"_id":"themes/butterfly/source/css/_tags/hexo.styl","hash":"d76c38adf1d9c1279ef4241835667789f5b736e0","modified":1716626729910},{"_id":"themes/butterfly/source/css/_tags/button.styl","hash":"45f0c32bdea117540f6b14ebac6450d7142bd710","modified":1716626729910},{"_id":"themes/butterfly/source/css/_tags/hide.styl","hash":"ce489ca2e249e2a3cf71584e20d84bdb022e3475","modified":1716626729910},{"_id":"themes/butterfly/source/css/_tags/gallery.styl","hash":"5cddbb5f4eae695a26685e415d821b523e0f17bf","modified":1716626729910},{"_id":"themes/butterfly/source/css/_tags/inlineImg.styl","hash":"df9d405c33a9a68946b530410f64096bcb72560c","modified":1716626729911},{"_id":"themes/butterfly/source/css/_tags/label.styl","hash":"66c59e193d794cdb02cca7bd1dc4aea5a19d7e84","modified":1716626729911},{"_id":"themes/butterfly/source/css/_tags/timeline.styl","hash":"f071156d439556e7463ed4bc61ceee87170d5d08","modified":1716626729911},{"_id":"themes/butterfly/source/css/_tags/tabs.styl","hash":"2d02e52b360f6e6cae47c293ae57ed78e2554663","modified":1716626729911},{"_id":"themes/butterfly/source/css/_tags/note.styl","hash":"909bb5079b26b6ee68177919f522566503654058","modified":1716626729911},{"_id":"themes/butterfly/source/css/_third-party/normalize.min.css","hash":"2c18a1c9604af475b4749def8f1959df88d8b276","modified":1716626729911},{"_id":"themes/butterfly/source/css/_page/404.styl","hash":"50dbb9e6d98c71ffe16741b8c1b0c1b9771efd2b","modified":1716626729910},{"_id":"themes/butterfly/source/css/_page/archives.styl","hash":"c9e98027f2dd730ce389c2047f62ebb748955fcf","modified":1716626729910},{"_id":"themes/butterfly/source/css/_page/flink.styl","hash":"98d755b686ee833e9da10afaa40c4ec2bd66c19a","modified":1716626729910},{"_id":"themes/butterfly/source/css/_page/homepage.styl","hash":"d4ebc41b5c855dd75f47de7345d62f85ce7cf073","modified":1716626729910},{"_id":"themes/butterfly/source/css/_page/tags.styl","hash":"580feb7e8b0822a1be48ac380f8c5c53b1523321","modified":1716626729910},{"_id":"themes/butterfly/source/js/search/algolia.js","hash":"108988d046da9a4716148df43b3975217c8ceaae","modified":1716626729912},{"_id":"themes/butterfly/source/css/_page/common.styl","hash":"4e320e16d49bc18085045937681f7331a1e243ca","modified":1716626729910},{"_id":"themes/butterfly/source/css/_page/categories.styl","hash":"f01ee74948cedb44e53cd3bb1ef36b7d2778ede7","modified":1716626729910},{"_id":"themes/butterfly/layout/includes/third-party/abcjs/abcjs.pug","hash":"f7299f9fef5bf94bb58c8cd3be8ee660ad2f9cd4","modified":1716626729902},{"_id":"themes/butterfly/source/js/search/local-search.js","hash":"e1f60ebac53a3f596fd0a4769b4f9275c48c6542","modified":1716626729912},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/artalk.pug","hash":"71af0b679e00290b0854384368b3c7e9b3e5f26a","modified":1716626729902},{"_id":"themes/butterfly/layout/includes/third-party/abcjs/index.pug","hash":"f58f1648d2d71311bafca4833f20b605bb5f18c8","modified":1716626729902},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/disqus.pug","hash":"c5f7081ca29db8cc80f808dfc29e36d5fa22fd7e","modified":1716626729902},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/remark42.pug","hash":"001e8be47854b891efe04013c240c38fed4185eb","modified":1716626729902},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/index.pug","hash":"b2d274db84ef22fbd6d5ea8f4404821898934209","modified":1716626729902},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/fb.pug","hash":"0344477a2cf38698318ead2681c63ac12f01586e","modified":1716626729902},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/valine.pug","hash":"39427e107230a10790972349c9dd4c4f31d55eb7","modified":1716626729902},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/waline.pug","hash":"3a5ccfc69bd8ccb4b8f3ce3502023f7914f2a022","modified":1716626729902},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/twikoo.pug","hash":"56c028ba0ea8fac19f0125114d765dfc56ce2b48","modified":1716626729902},{"_id":"themes/butterfly/layout/includes/third-party/chat/daovoice.pug","hash":"9b57a8e13de8fc51a5f550854e47164fd8ac1be8","modified":1716626729902},{"_id":"themes/butterfly/layout/includes/third-party/chat/crisp.pug","hash":"2fb098a7aa45010a8cd212dc0bd5308c6e7c63e3","modified":1716626729902},{"_id":"themes/butterfly/layout/includes/third-party/chat/chatra.pug","hash":"ddce8352b371a1fb426bdb6c33f587eb37a69647","modified":1716626729902},{"_id":"themes/butterfly/layout/includes/third-party/chat/tidio.pug","hash":"dd61eca6e9a45f63e09bdefba89fe285a81ba096","modified":1716626729903},{"_id":"themes/butterfly/layout/includes/third-party/chat/messenger.pug","hash":"e39a9c37adf4cb15a2ba3b2cc65542ffea88650d","modified":1716626729903},{"_id":"themes/butterfly/layout/includes/third-party/chat/index.pug","hash":"618e1b7f9204049b07beb9e1363c844a78a9ace3","modified":1716626729903},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqus.pug","hash":"62f16a602e57e5f7f7c5249dd37b42d436dc032a","modified":1716626729903},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqusjs.pug","hash":"3bc4c1b91568561f0491bdac65b75aa0bfd01f27","modified":1716626729903},{"_id":"themes/butterfly/layout/includes/third-party/comments/facebook_comments.pug","hash":"46aec6466959baec1c3d71a5dbc510fbeb00c91d","modified":1716626729903},{"_id":"themes/butterfly/layout/includes/third-party/comments/index.pug","hash":"a9709905593d960954e2dd572f09f48a6c2b1ef7","modified":1716626729903},{"_id":"themes/butterfly/layout/includes/third-party/comments/gitalk.pug","hash":"0d378ee8a671982a46213a4bfb223b4f3409aea9","modified":1716626729903},{"_id":"themes/butterfly/layout/includes/third-party/comments/artalk.pug","hash":"f77f0fdeac2bc8a72f71a58f9b75aa39f0a108c8","modified":1716626729903},{"_id":"themes/butterfly/layout/includes/third-party/comments/js.pug","hash":"00ed91c52939b9675b316137f854d13684c895a6","modified":1716626729903},{"_id":"themes/butterfly/layout/includes/third-party/comments/giscus.pug","hash":"2d7b0b09678adba09481e3152e0b32962677f650","modified":1716626729903},{"_id":"themes/butterfly/layout/includes/third-party/comments/livere.pug","hash":"63cea2b5c8f7b59f5919379d61a2bb2ce8ed7623","modified":1716626729903},{"_id":"themes/butterfly/layout/includes/third-party/comments/valine.pug","hash":"46865e3f52096acb07d0212174b4e8751b123aea","modified":1716626729903},{"_id":"themes/butterfly/layout/includes/third-party/comments/utterances.pug","hash":"1995a654ba7ad62775a0a6e2922209cd1a85f2e3","modified":1716626729903},{"_id":"themes/butterfly/layout/includes/third-party/comments/twikoo.pug","hash":"5c29b5887e2e6cd81e1f13b32da53d9c139b788b","modified":1716626729903},{"_id":"themes/butterfly/layout/includes/third-party/comments/waline.pug","hash":"7aa443b4881448979b810864e206e58c9ed787e3","modified":1716626729904},{"_id":"themes/butterfly/layout/includes/third-party/math/index.pug","hash":"b8ae5fd7d74e1edcef21f5004fc96147e064d219","modified":1716626729904},{"_id":"themes/butterfly/layout/includes/third-party/comments/remark42.pug","hash":"f15699abb8c7a255aabad0222ae53eee387c66a3","modified":1716626729903},{"_id":"themes/butterfly/layout/includes/third-party/math/mermaid.pug","hash":"6b67982bb7a3713b5bffd6a23ba2810425c504d0","modified":1716626729904},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/artalk.pug","hash":"17080aba1754478197ab089f7948ed900f116d2b","modified":1716626729904},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/disqus-comment.pug","hash":"2609bc2656aaaa9b59e8d575e711776512a62192","modified":1716626729904},{"_id":"themes/butterfly/layout/includes/third-party/math/katex.pug","hash":"dfcbd9881be569ea420eff1a6b00e4f4dbe2138e","modified":1716626729904},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/github-issues.pug","hash":"0f0b46d637a9a1b6ae35148923abecc80b866276","modified":1716626729904},{"_id":"themes/butterfly/layout/includes/third-party/math/mathjax.pug","hash":"fc072ac839401174b5d3cf9acd3b694246c23a55","modified":1716626729904},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/twikoo-comment.pug","hash":"4104f96faa6040f111ebfb9a90eeb470857c3b86","modified":1716626729904},{"_id":"themes/butterfly/layout/includes/third-party/search/docsearch.pug","hash":"b928be14d1b47a9fadb1bcc5f5072a7328752d4b","modified":1716626729905},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/index.pug","hash":"4ec0642f2d5444acfab570a6f8c7868e7ff43fde","modified":1716626729904},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/waline.pug","hash":"24804ab6da9727ed793655c1262fa3f1a9746f70","modified":1716626729904},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/remark42.pug","hash":"de2c4d02b520dd49a0a59fc0f33295e5bbb2c624","modified":1716626729904},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/valine.pug","hash":"1f9f51023e9e33081c2add2ca73643c0edc5e9d5","modified":1716626729904},{"_id":"themes/butterfly/layout/includes/third-party/search/index.pug","hash":"a99a41334387ee9a46c6f8e8212331a29a10d159","modified":1716626729905},{"_id":"themes/butterfly/layout/includes/third-party/search/algolia.pug","hash":"9c3c109a12d2b6916e8b4965cca12f521510ead9","modified":1716626729905},{"_id":"themes/butterfly/layout/includes/third-party/share/index.pug","hash":"3ba49cfe186e9ca05faf9f0d0113611ec47e9b38","modified":1716626729905},{"_id":"themes/butterfly/layout/includes/third-party/share/share-js.pug","hash":"c7dd2b2ae9b23aa0a60fffd7df9e9f76ef52033e","modified":1716626729905},{"_id":"themes/butterfly/layout/includes/third-party/share/addtoany.pug","hash":"85c92f8a7e44d7cd1c86f089a05be438535e5362","modified":1716626729905},{"_id":"themes/butterfly/source/css/_highlight/highlight/diff.styl","hash":"cf1fae641c927621a4df1be5ca4a853b9b526e23","modified":1716626729908},{"_id":"themes/butterfly/layout/includes/third-party/search/local-search.pug","hash":"3335024ba91f55ccf3858571b7898f46881c455c","modified":1716626729905},{"_id":"themes/butterfly/source/css/_highlight/highlight/index.styl","hash":"18804c58239d95798fa86d0597f32d7f7dd30051","modified":1716626729908},{"_id":"themes/butterfly/source/css/_highlight/prismjs/diff.styl","hash":"5972c61f5125068cbe0af279a0c93a54847fdc3b","modified":1716626729908},{"_id":"themes/butterfly/source/css/_highlight/prismjs/line-number.styl","hash":"25914321762e30aacc610bc4dfb9de3e1cb556a3","modified":1716626729908},{"_id":"themes/butterfly/source/css/_highlight/prismjs/index.styl","hash":"5dc2e0bcae9a54bfb9bdcc82d02ae5a3cf1ca97d","modified":1716626729908},{"_id":"source/_posts/hexo/test.md","hash":"df21804e793c845d5ff79e968c4a00e7b7e47b93","modified":1717086513465},{"_id":"public/search.xml","hash":"80abf9be9ad796d875a2412d707b552adbd7d085","modified":1718067479960},{"_id":"public/404.html","hash":"42771066a0ce801364813022ae28da0b4acfb5fd","modified":1718067479960},{"_id":"public/categories/index.html","hash":"f8513ed886998bb924e121f214e0ab7e31eb7d0f","modified":1718067479960},{"_id":"public/friends/index.html","hash":"8b5555f098757ced90e63673b11221588d0498eb","modified":1718067479960},{"_id":"public/tags/index.html","hash":"1c3ff271e3fd0a2727f20d76a8beedd71d189949","modified":1718067479960},{"_id":"public/about/index.html","hash":"7e666581d666042a571f9a418f506657d2d06e11","modified":1718067479960},{"_id":"public/hexo/test.html","hash":"dcd86934c707477b80d329492a48ccf0e6bc0d95","modified":1716897279673},{"_id":"public/2024/05/24/network/acme.sh域名自动化更新证书/index.html","hash":"3323a8f7eacb3d3910e44deefb9312791babe862","modified":1716897279673},{"_id":"public/2024/05/23/hexo/使用hexo和git实现多地更新和配置博客源文件/index.html","hash":"6dcd0314ceeffd3f38970d45c822fc91e7159b7d","modified":1716897279673},{"_id":"public/2022/05/23/hello-world/index.html","hash":"cbcdac625edb82b178cf83433043c4f069258256","modified":1716897279673},{"_id":"public/archives/index.html","hash":"bf7acf43da40d91014223e92579fd845f4268752","modified":1718067479960},{"_id":"public/archives/2022/index.html","hash":"66d67aa79cdebfcd3eb759b963e0ee454d8a95b8","modified":1718067479960},{"_id":"public/archives/2022/05/index.html","hash":"8b101dec90e0025ab43520beed53f974c8cb08a6","modified":1718067479960},{"_id":"public/archives/2024/index.html","hash":"bb939d8adefc9651d575f69efed72ed7cb63d4c2","modified":1718067479960},{"_id":"public/archives/2024/05/index.html","hash":"997a44466e392f0cd8efc76c446e2c6756088494","modified":1718067479960},{"_id":"public/categories/Network/index.html","hash":"d32b85c5f04c45903e8f716c8ba5cfa96b821f85","modified":1716897279673},{"_id":"public/index.html","hash":"2467d231ff3e06206cee926fc1fc0e12e0023f2d","modified":1718067479960},{"_id":"public/tags/Hexo/index.html","hash":"395df9262cccded774cbc98f268eb308ad944fb2","modified":1718067479960},{"_id":"public/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1716726556434},{"_id":"public/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1716726556434},{"_id":"public/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1716726556434},{"_id":"public/img/img.png","hash":"62efbec711ae4f6dcb2f9e0ec6bc0b6786855ac0","modified":1716726556434},{"_id":"public/css/var.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1716726556434},{"_id":"public/js/search/algolia.js","hash":"108988d046da9a4716148df43b3975217c8ceaae","modified":1716726556434},{"_id":"public/js/search/local-search.js","hash":"e1f60ebac53a3f596fd0a4769b4f9275c48c6542","modified":1716726556434},{"_id":"public/js/utils.js","hash":"8e6b48d294e7aeaba8ff6348c43b2271cf865547","modified":1716726556434},{"_id":"public/js/main.js","hash":"0dac585446445e0c419b86eec5580bc9b0657dc6","modified":1716726556434},{"_id":"public/css/index.css","hash":"d7dc4c614453c1f1d44cbd043871a2a4b9d1603f","modified":1716726556434},{"_id":"public/js/tw_cn.js","hash":"f8d2e3f31468991a7f5171cbfdb157dfb86d3372","modified":1716726556434},{"_id":"source/img/.DS_Store","hash":"ca03dea23b56eac4cbebb589f8f5094591806ee7","modified":1716992189014},{"_id":"source/img/cover/10.jpg","hash":"ac2b6a1ca01d5dc7111379b25e16301c28ebbd3d","modified":1716991952907},{"_id":"source/img/cover/15.jpg","hash":"d852de3e6d3eae8741d728d90a98cd81b5a94edc","modified":1716991992398},{"_id":"source/img/cover/16.jpg","hash":"da90ac43d30bc03fb9e50099f143a46b34e4b029","modified":1716992094641},{"_id":"source/img/cover/9.jpg","hash":"d27124ab6b9df2d699a1cd9b4c843b633b88d5f5","modified":1716991982190},{"_id":"source/img/cover/8.jpg","hash":"91b54ffce287ddae8f14ca5a2197977198439e4b","modified":1716991938791},{"_id":"source/img/cover/0.jpg","hash":"0a033be563250c89299380c825d47724f767f4d7","modified":1716992079954},{"_id":"source/img/cover/11.jpg","hash":"de0cec9e04a127d1724fff9467f47a7966182394","modified":1716992071698},{"_id":"source/img/cover/17.jpg","hash":"091b5944d7d84cbc62070e5d0d0009344397f8e4","modified":1716992058469},{"_id":"source/img/cover/2.jpg","hash":"af60c715c8c34d6a3265a59879ea2e204a79a18f","modified":1716992013027},{"_id":"source/img/cover/1.jpg","hash":"98e06641570ef203f907d9ec55354dd4c4e3e37b","modified":1716992039521},{"_id":"source/img/cover/13.jpg","hash":"8175eb6a1a3e6a2de31c3d28dc0e26d0467af738","modified":1716991928073},{"_id":"source/img/cover/14.jpg","hash":"c01cf72ad89971e4e339d15d7d2347bc8a0b41aa","modified":1716991886185},{"_id":"source/img/cover/7.jpg","hash":"262619b1f3446e2f111e9c9c848bfc2e25d11236","modified":1716991919038},{"_id":"source/img/cover/5.jpg","hash":"2f80d2cf36a01cb119805e55c830bf79610ebfd8","modified":1716991728905},{"_id":"source/img/cover/6.jpg","hash":"09717e4d8f49b29d783ac4ce348ba3a7f7ac4f12","modified":1716991871071},{"_id":"source/img/cover/12.jpg","hash":"04dc71d36c848562013f3cdbb01aa52f88598e8c","modified":1716992117070},{"_id":"source/img/cover/3.jpg","hash":"94fd7940cc4b5e435e877e28f92b608c2b816d61","modified":1716991902610},{"_id":"source/img/cover/4.jpg","hash":"8b474baca3334aa2c9df123f37f6e4fbbd21c440","modified":1716992025397},{"_id":"source/_posts/hexo/test1.md","hash":"83ea9dfbd058c0006ef2a6769a5ac63d77464f65","modified":1717086513459},{"_id":"source/_posts/db/mybatis-mapper.md","hash":"fb6b1be83afb6d460df17751583e05c5d62535e3","modified":1717386849646},{"_id":"source/_posts/network/域名自动化更新证书.md","hash":"334c2807702a0d60a6d7160e3efc7689e0adf13c","modified":1717765477591},{"_id":"source/archive/index.md","hash":"0104bde8cb64b88aff7d3b30202810175b129a35","modified":1717395275885},{"_id":"source/archives/index.md","hash":"d55d7a84a5079f9c6572b4c4db0fb7c703c1e6da","modified":1717395431035},{"_id":"source/img/index.jpg","hash":"84a86ba35bccf1f22518ffeacac9bd530ac59372","modified":1717395905085},{"_id":"source/img/404.png","hash":"5e75790171ca6a8a3446be21aa787deb1c58e8db","modified":1717397341059},{"_id":"public/db/mybatis-mapper.html","hash":"67f72f2a4b27a6e92a7c97c3d2a6fb5c2de38be6","modified":1717724117947},{"_id":"public/network/acme_sh.html","hash":"5f052ab745202d6da65cb94a0598db7f1b1c5ce0","modified":1718067479960},{"_id":"public/hello-word.html","hash":"c23967ff19ca94f8d2fae2707731db3198d562d9","modified":1717724117947},{"_id":"public/hexo/hexo-git.html","hash":"559239df24d3578ab4247f66d69b062470e45af4","modified":1717724117947},{"_id":"public/archives/2024/06/index.html","hash":"7e0cebf5f1c1fe1ac235de709f71cc925242e0ff","modified":1718067479960},{"_id":"public/categories/网络/index.html","hash":"e703fc1f564eea07ea5bc541458adf61d8bc0f1d","modified":1718067479960},{"_id":"public/categories/数据库/index.html","hash":"fcf13c4a15af67b54b45c18b0ede2dab05818c40","modified":1718067479960},{"_id":"public/tags/Mybatis/index.html","hash":"338d862d4aec4d0233a7489a277cc88a12b4ec8d","modified":1718067479960},{"_id":"public/tags/Mysql/index.html","hash":"b34965d75151d3cfe9a5767b428f6b2488ede75a","modified":1718067479960},{"_id":"public/img/404.png","hash":"5e75790171ca6a8a3446be21aa787deb1c58e8db","modified":1717398126688},{"_id":"public/img/cover/10.jpg","hash":"ac2b6a1ca01d5dc7111379b25e16301c28ebbd3d","modified":1717398126688},{"_id":"public/img/cover/15.jpg","hash":"d852de3e6d3eae8741d728d90a98cd81b5a94edc","modified":1717398126688},{"_id":"public/img/index.jpg","hash":"84a86ba35bccf1f22518ffeacac9bd530ac59372","modified":1717398126688},{"_id":"public/img/cover/16.jpg","hash":"da90ac43d30bc03fb9e50099f143a46b34e4b029","modified":1717398126688},{"_id":"public/img/cover/8.jpg","hash":"91b54ffce287ddae8f14ca5a2197977198439e4b","modified":1717398126688},{"_id":"public/img/cover/9.jpg","hash":"d27124ab6b9df2d699a1cd9b4c843b633b88d5f5","modified":1717398126688},{"_id":"public/img/cover/0.jpg","hash":"0a033be563250c89299380c825d47724f767f4d7","modified":1717398126688},{"_id":"public/img/cover/17.jpg","hash":"091b5944d7d84cbc62070e5d0d0009344397f8e4","modified":1717398126688},{"_id":"public/img/cover/2.jpg","hash":"af60c715c8c34d6a3265a59879ea2e204a79a18f","modified":1717398126688},{"_id":"public/img/cover/11.jpg","hash":"de0cec9e04a127d1724fff9467f47a7966182394","modified":1717398126688},{"_id":"public/img/cover/1.jpg","hash":"98e06641570ef203f907d9ec55354dd4c4e3e37b","modified":1717398126688},{"_id":"public/img/cover/13.jpg","hash":"8175eb6a1a3e6a2de31c3d28dc0e26d0467af738","modified":1717398126688},{"_id":"public/img/cover/14.jpg","hash":"c01cf72ad89971e4e339d15d7d2347bc8a0b41aa","modified":1717398126688},{"_id":"public/img/cover/7.jpg","hash":"262619b1f3446e2f111e9c9c848bfc2e25d11236","modified":1717398126688},{"_id":"public/img/cover/6.jpg","hash":"09717e4d8f49b29d783ac4ce348ba3a7f7ac4f12","modified":1717398126688},{"_id":"public/img/cover/5.jpg","hash":"2f80d2cf36a01cb119805e55c830bf79610ebfd8","modified":1717398126688},{"_id":"public/img/cover/12.jpg","hash":"04dc71d36c848562013f3cdbb01aa52f88598e8c","modified":1717398126688},{"_id":"public/img/cover/3.jpg","hash":"94fd7940cc4b5e435e877e28f92b608c2b816d61","modified":1717398126688},{"_id":"public/img/cover/4.jpg","hash":"8b474baca3334aa2c9df123f37f6e4fbbd21c440","modified":1717398126688},{"_id":"source/_posts/db/sql.md","hash":"486d2576ef6afb4ce3f697fd3a1caffcf0a733ca","modified":1717762415019},{"_id":"source/_posts/live/减肥记录.md","hash":"9847bf39dac3d12afcb6296566ff66be03242e22","modified":1717724073080},{"_id":"public/db/sql.html","hash":"09436a552a35ba00dfbbfbfa299432fd9163c34c","modified":1718067479960},{"_id":"public/live/lose-weight-records.html","hash":"c83215469d331f57ba8520509c607a8d89535a59","modified":1717724117947},{"_id":"public/categories/生活/index.html","hash":"1ff7c0415dc0853327d271e4032ea9785a1d3c05","modified":1718067479960},{"_id":"public/tags/DM/index.html","hash":"820f5f5bc4eeec8254723b07f192b8c68080d885","modified":1718067479960},{"_id":"public/tags/生活/index.html","hash":"33b256da42096089a04c82bff58db87966698f66","modified":1718067479960},{"_id":"public/tags/减肥/index.html","hash":"adad331a30a57a823b9635ec02516a2b4873259e","modified":1718067479960},{"_id":"source/_posts/html/css实用代码合集.md","hash":"37e7e703f9de322d18542f2d99ab6ceb8072715d","modified":1717662002935},{"_id":"public/html/practical-css.html","hash":"b9dc1ef716438646c575304b27943d4c815fe893","modified":1717724117947},{"_id":"public/categories/前端/index.html","hash":"9d981c2863abb6363e34ba0d85d1d116be62831e","modified":1718067479960},{"_id":"public/tags/前端/index.html","hash":"30caf3e78b503f3791a801f1aabdc17c8a39e5fc","modified":1718067479960},{"_id":"public/tags/CSS/index.html","hash":"b2bfca34dc81034bf62f79ba6f9c9916a14b9cfc","modified":1718067479960}],"Category":[{"name":"Network","_id":"clwlyxfaz0008l8qf72kt10nt"},{"name":"数据库","_id":"clwyfai2k00017lqf0raz5mtd"},{"name":"网络","_id":"clwyfor6u000b7lqf4bxbbd9g"},{"name":"生活","_id":"clx204ldq0001p4qfeneqd9t7"},{"name":"前端","_id":"clx2ziu2t00012eqf32u19rem"}],"Data":[],"Page":[{"title":"所有分类","date":"2019-05-24T16:00:00.000Z","type":"categories","comments":0,"categories":null,"tags":null,"_content":"","source":"categories/index.md","raw":"---\ntitle: 所有分类\ndate: 2019-05-25\ntype: \"categories\"\ncomments: false\ncategories:\ntags:\n---\n","updated":"2024-06-03T06:26:26.095Z","path":"categories/index.html","_id":"clwlyxfau0000l8qf34g52gu4","layout":"page","content":"","cover":"img/cover/0.jpg","cover_type":"img","excerpt":"","more":""},{"title":"friends","date":"2024-05-24T16:00:00.000Z","type":"friends","_content":"","source":"friends/index.md","raw":"---\ntitle: friends\ndate: 2024-05-25\ntype: friends\n---\n","updated":"2024-05-25T07:17:26.890Z","path":"friends/index.html","comments":1,"layout":"page","_id":"clwlyxfax0002l8qf480757dm","content":"","site":{"data":{}},"cover":false,"excerpt":"","more":""},{"title":"所有标签","date":"2019-05-03T04:03:35.000Z","type":"tags","description":"2w435是","comments":0,"categories":null,"tags":null,"top_img":null,"_content":"","source":"tags/index.md","raw":"---\ntitle: 所有标签\ndate: 2019-05-03 12:03:35\ntype: \"tags\"\ndescription: 2w435是\ncomments: false\ncategories:\ntags:\ntop_img:\n---\n","updated":"2024-06-03T06:27:41.476Z","path":"tags/index.html","_id":"clwlyxfay0004l8qfa6k7a62a","layout":"page","content":"","cover":"img/cover/0.jpg","cover_type":"img","excerpt":"","more":""},{"title":"关于我","date":"2019-05-03T04:03:35.000Z","type":"about","cover":"img/cover/0.jpg","categories":null,"tags":null,"top_img":null,"_content":"第一次用hexo写博客，之前有自己用自己的服务器写过博客，但后来服务器出问题，不堪回首，现在要用这个来重写博客了！！！\n\n## 我也不知道我自己要写一些什么\n\n兜兜转转，一年又一年，以后一周怎么说也要弄一篇文章出来吧，记录一下自己工作中遇到的问题，记录一下处理方式，也记录一下别的什么～～～\n","source":"about/index.md","raw":"---\ntitle: 关于我\ndate: 2019-05-03 12:03:35\ntype: \"about\"\ncover:\ncategories:\ntags:\ntop_img:\n---\n第一次用hexo写博客，之前有自己用自己的服务器写过博客，但后来服务器出问题，不堪回首，现在要用这个来重写博客了！！！\n\n## 我也不知道我自己要写一些什么\n\n兜兜转转，一年又一年，以后一周怎么说也要弄一篇文章出来吧，记录一下自己工作中遇到的问题，记录一下处理方式，也记录一下别的什么～～～\n","updated":"2024-06-03T06:27:45.699Z","path":"about/index.html","_id":"clwlyxfaz0007l8qf0jtba5kv","comments":1,"layout":"page","content":"<p>第一次用hexo写博客，之前有自己用自己的服务器写过博客，但后来服务器出问题，不堪回首，现在要用这个来重写博客了！！！</p>\n<h2 id=\"我也不知道我自己要写一些什么\"><a href=\"#我也不知道我自己要写一些什么\" class=\"headerlink\" title=\"我也不知道我自己要写一些什么\"></a>我也不知道我自己要写一些什么</h2><p>兜兜转转，一年又一年，以后一周怎么说也要弄一篇文章出来吧，记录一下自己工作中遇到的问题，记录一下处理方式，也记录一下别的什么～～～</p>\n","cover_type":"img","excerpt":"","more":"<p>第一次用hexo写博客，之前有自己用自己的服务器写过博客，但后来服务器出问题，不堪回首，现在要用这个来重写博客了！！！</p>\n<h2 id=\"我也不知道我自己要写一些什么\"><a href=\"#我也不知道我自己要写一些什么\" class=\"headerlink\" title=\"我也不知道我自己要写一些什么\"></a>我也不知道我自己要写一些什么</h2><p>兜兜转转，一年又一年，以后一周怎么说也要弄一篇文章出来吧，记录一下自己工作中遇到的问题，记录一下处理方式，也记录一下别的什么～～～</p>\n"}],"Post":[{"title":"hexo命令","cover":"img/cover/17.jpg","date":"2022-05-22T16:00:00.000Z","_content":"### 前言\n\n第一次用hexo写博客，之前有自己用自己的服务器写过博客，但后来服务器出问题，不堪回首，现在要用这个来重写博客了！！！\n\n---\n\n### 总要记录一点什么吧\n\nhexo的一些常用命令模版\n\n```shell\nhexo s # 启动服务\nhexo d -g # 编译项目并推送到github下mater分支\nhexo new post 测试 --path hexo/test # 创建title为测试文件名为test.md位置在hexo文件夹下的文章\n```\n","source":"_posts/hello-world.md","raw":"---\ntitle: hexo命令\npermalink: hello-word.html\ncover: img/cover/17.jpg\ndate: 2022-05-23\ncategories:\ntags:\n---\n### 前言\n\n第一次用hexo写博客，之前有自己用自己的服务器写过博客，但后来服务器出问题，不堪回首，现在要用这个来重写博客了！！！\n\n---\n\n### 总要记录一点什么吧\n\nhexo的一些常用命令模版\n\n```shell\nhexo s # 启动服务\nhexo d -g # 编译项目并推送到github下mater分支\nhexo new post 测试 --path hexo/test # 创建title为测试文件名为test.md位置在hexo文件夹下的文章\n```\n","slug":"hello-world","published":1,"updated":"2024-06-04T02:30:25.282Z","__permalink":"hello-word.html","_id":"clwlyxfaw0001l8qf5huo6205","comments":1,"layout":"post","photos":[],"content":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>第一次用hexo写博客，之前有自己用自己的服务器写过博客，但后来服务器出问题，不堪回首，现在要用这个来重写博客了！！！</p>\n<hr>\n<h3 id=\"总要记录一点什么吧\"><a href=\"#总要记录一点什么吧\" class=\"headerlink\" title=\"总要记录一点什么吧\"></a>总要记录一点什么吧</h3><p>hexo的一些常用命令模版</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo s # 启动服务</span><br><span class=\"line\">hexo d -g # 编译项目并推送到github下mater分支</span><br><span class=\"line\">hexo new post 测试 --path hexo/test # 创建title为测试文件名为test.md位置在hexo文件夹下的文章</span><br></pre></td></tr></table></figure>\n","cover_type":"img","excerpt":"","more":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>第一次用hexo写博客，之前有自己用自己的服务器写过博客，但后来服务器出问题，不堪回首，现在要用这个来重写博客了！！！</p>\n<hr>\n<h3 id=\"总要记录一点什么吧\"><a href=\"#总要记录一点什么吧\" class=\"headerlink\" title=\"总要记录一点什么吧\"></a>总要记录一点什么吧</h3><p>hexo的一些常用命令模版</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo s # 启动服务</span><br><span class=\"line\">hexo d -g # 编译项目并推送到github下mater分支</span><br><span class=\"line\">hexo new post 测试 --path hexo/test # 创建title为测试文件名为test.md位置在hexo文件夹下的文章</span><br></pre></td></tr></table></figure>\n"},{"title":"使用hexo和git实现多地更新和配置博客源文件","date":"2024-05-22T16:00:00.000Z","cover":"/img/cover/11.jpg","_content":"### 前言\n\n使用[hexo](https://hexo.io/zh-cn/)写博客的一个问题就是源文件都是在本地的，如果换了电脑需要更新博客时就会比较麻烦。目前，觉得比较靠谱的办法就是用github来管理了。\n\n- 利用git分支实现\n- hexo生成的静态博客文件默认放在master分支上。\n- hexo的源文件（部署环境文件）可以都放在hexo分支上（可以新创建一个hexo分支），换新电脑时，直接git clone hexo分支\n\n### hexo搭建博客原理\n\n- hexo帮助把博客发送到github，同时把md文件转换成网页文件。\n- hexo目录下的文件和github上的文件是不同的，public文件夹的文件通过hexo d 上传到github去了，其他的文件则留在本地目录下。\n\n### 搭建hexo服务器端电脑设置\n\n#### 准备工作\n\n- 首先确保自己已经使用hexo在[github](https://so.csdn.net/so/search?q=github&spm=1001.2101.3001.7020)搭建好了自己的个人博客。\n\n#### 对username.github.io仓库新建hexo分支，并克隆\n\n- 在Github的username.github.io仓库上新建一个xxx分支，并切换到该分支，并在该仓库->Settings->Branches->Default branch中将默认分支设为xxx，save保存；然后将该仓库克隆到本地，进入该username.github.io文件目录\n- 完成上面步骤后，在当前目录使用Git Bash执行git branch命令查看当前所在分支，应为新建的分支xxx\n\n#### 将本地博客的部署文件拷贝进username.github.io文件目录\n\n-  如题，先将本地博客的部署文件（Hexo目录下的全部文件）全部拷贝进username.github.io文件目录中去。\n- 接下来，进入username.github.io文件目录下，将该目录下的全部文件提交到xxx分支，提交之前需注意：\n  - 将themes目录以内中的主题的.git目录删除（如果有），因为一个git仓库中不能包含另一个git仓库，提交主题文件夹会失败。\n  - 可能有人会问，删除了themes目录中的.git不就不能git pull更新主题了吗，很简单，需要更新主题时在另一个地方git clone下来该主题的最新版本，然后将内容拷到当前主题目\n\n#### 提交hexo分支\n\n- 执行git add .、git commit -m ‘back up hexo files’（引号内容可改）、git push即可将博客的hexo部署环境提交到GitHub个人仓库的xxx分支：\n\n  现在可以在GitHub上的username.github.io仓库看到两个分支的差异了。\n  master分支和xxx分支各自保存着一个版本，master分支用于保存博客静态资源，提供博客页面供人访问；xxx分支用于备份博客部署文件，供自己维护更新，两者在一个GitHub仓库内互不冲突。\n\n### 其他任何一台电脑\n\n至此，你的博客已经可以在其他电脑上进行同步的维护和更新了，方法很简单：\n\n- 将新电脑的生成的ssh key添加到GitHub账户上\n- 在新电脑上克隆username.github.io仓库的xxx分支到本地，此时本地git仓库处于xxx分支\n- 切换到username.github.io目录，执行npm install(由于仓库有一个.gitignore文件，里面默认是忽略掉 node_modules文件夹的，也就是说仓库的hexo分支并没有存储该目录[也不需要]，所以需要install下)\n- 到这里了就可以开始在自己的电脑上写博客了！\n\n编辑、撰写文章或其他博客更新改动：\n\n- 依次执行git add .、git commit -m ‘back up hexo files’（引号内容可改）、git push指令，保证xxx分支版本最新\n- 执行hexo d -g指令（在此之前，有时可能需要执行hexo clean），完成后就会发现，最新改动已经更新到master分支了，两个分支互不干扰！\n\n### 回到hexo服务器端电脑更新并提交博客\n\n\n\n注：[原地址](https://blog.csdn.net/qq_41684957/article/details/90680765)\n","source":"_posts/hexo/使用hexo和git实现多地更新和配置博客源文件.md","raw":"---\ntitle: 使用hexo和git实现多地更新和配置博客源文件\ndate: 2024-05-23\npermalink: hexo/hexo-git.html\ncover: /img/cover/11.jpg\ncategories:\ntags:\n  - Hexo\n---\n### 前言\n\n使用[hexo](https://hexo.io/zh-cn/)写博客的一个问题就是源文件都是在本地的，如果换了电脑需要更新博客时就会比较麻烦。目前，觉得比较靠谱的办法就是用github来管理了。\n\n- 利用git分支实现\n- hexo生成的静态博客文件默认放在master分支上。\n- hexo的源文件（部署环境文件）可以都放在hexo分支上（可以新创建一个hexo分支），换新电脑时，直接git clone hexo分支\n\n### hexo搭建博客原理\n\n- hexo帮助把博客发送到github，同时把md文件转换成网页文件。\n- hexo目录下的文件和github上的文件是不同的，public文件夹的文件通过hexo d 上传到github去了，其他的文件则留在本地目录下。\n\n### 搭建hexo服务器端电脑设置\n\n#### 准备工作\n\n- 首先确保自己已经使用hexo在[github](https://so.csdn.net/so/search?q=github&spm=1001.2101.3001.7020)搭建好了自己的个人博客。\n\n#### 对username.github.io仓库新建hexo分支，并克隆\n\n- 在Github的username.github.io仓库上新建一个xxx分支，并切换到该分支，并在该仓库->Settings->Branches->Default branch中将默认分支设为xxx，save保存；然后将该仓库克隆到本地，进入该username.github.io文件目录\n- 完成上面步骤后，在当前目录使用Git Bash执行git branch命令查看当前所在分支，应为新建的分支xxx\n\n#### 将本地博客的部署文件拷贝进username.github.io文件目录\n\n-  如题，先将本地博客的部署文件（Hexo目录下的全部文件）全部拷贝进username.github.io文件目录中去。\n- 接下来，进入username.github.io文件目录下，将该目录下的全部文件提交到xxx分支，提交之前需注意：\n  - 将themes目录以内中的主题的.git目录删除（如果有），因为一个git仓库中不能包含另一个git仓库，提交主题文件夹会失败。\n  - 可能有人会问，删除了themes目录中的.git不就不能git pull更新主题了吗，很简单，需要更新主题时在另一个地方git clone下来该主题的最新版本，然后将内容拷到当前主题目\n\n#### 提交hexo分支\n\n- 执行git add .、git commit -m ‘back up hexo files’（引号内容可改）、git push即可将博客的hexo部署环境提交到GitHub个人仓库的xxx分支：\n\n  现在可以在GitHub上的username.github.io仓库看到两个分支的差异了。\n  master分支和xxx分支各自保存着一个版本，master分支用于保存博客静态资源，提供博客页面供人访问；xxx分支用于备份博客部署文件，供自己维护更新，两者在一个GitHub仓库内互不冲突。\n\n### 其他任何一台电脑\n\n至此，你的博客已经可以在其他电脑上进行同步的维护和更新了，方法很简单：\n\n- 将新电脑的生成的ssh key添加到GitHub账户上\n- 在新电脑上克隆username.github.io仓库的xxx分支到本地，此时本地git仓库处于xxx分支\n- 切换到username.github.io目录，执行npm install(由于仓库有一个.gitignore文件，里面默认是忽略掉 node_modules文件夹的，也就是说仓库的hexo分支并没有存储该目录[也不需要]，所以需要install下)\n- 到这里了就可以开始在自己的电脑上写博客了！\n\n编辑、撰写文章或其他博客更新改动：\n\n- 依次执行git add .、git commit -m ‘back up hexo files’（引号内容可改）、git push指令，保证xxx分支版本最新\n- 执行hexo d -g指令（在此之前，有时可能需要执行hexo clean），完成后就会发现，最新改动已经更新到master分支了，两个分支互不干扰！\n\n### 回到hexo服务器端电脑更新并提交博客\n\n\n\n注：[原地址](https://blog.csdn.net/qq_41684957/article/details/90680765)\n","slug":"hexo/使用hexo和git实现多地更新和配置博客源文件","published":1,"updated":"2024-06-03T06:32:27.300Z","__permalink":"hexo/hexo-git.html","_id":"clwlyxfax0003l8qf97ms7u9o","comments":1,"layout":"post","photos":[],"content":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>使用<a href=\"https://hexo.io/zh-cn/\">hexo</a>写博客的一个问题就是源文件都是在本地的，如果换了电脑需要更新博客时就会比较麻烦。目前，觉得比较靠谱的办法就是用github来管理了。</p>\n<ul>\n<li>利用git分支实现</li>\n<li>hexo生成的静态博客文件默认放在master分支上。</li>\n<li>hexo的源文件（部署环境文件）可以都放在hexo分支上（可以新创建一个hexo分支），换新电脑时，直接git clone hexo分支</li>\n</ul>\n<h3 id=\"hexo搭建博客原理\"><a href=\"#hexo搭建博客原理\" class=\"headerlink\" title=\"hexo搭建博客原理\"></a>hexo搭建博客原理</h3><ul>\n<li>hexo帮助把博客发送到github，同时把md文件转换成网页文件。</li>\n<li>hexo目录下的文件和github上的文件是不同的，public文件夹的文件通过hexo d 上传到github去了，其他的文件则留在本地目录下。</li>\n</ul>\n<h3 id=\"搭建hexo服务器端电脑设置\"><a href=\"#搭建hexo服务器端电脑设置\" class=\"headerlink\" title=\"搭建hexo服务器端电脑设置\"></a>搭建hexo服务器端电脑设置</h3><h4 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h4><ul>\n<li>首先确保自己已经使用hexo在<a href=\"https://so.csdn.net/so/search?q=github&amp;spm=1001.2101.3001.7020\">github</a>搭建好了自己的个人博客。</li>\n</ul>\n<h4 id=\"对username-github-io仓库新建hexo分支，并克隆\"><a href=\"#对username-github-io仓库新建hexo分支，并克隆\" class=\"headerlink\" title=\"对username.github.io仓库新建hexo分支，并克隆\"></a>对username.github.io仓库新建hexo分支，并克隆</h4><ul>\n<li>在Github的username.github.io仓库上新建一个xxx分支，并切换到该分支，并在该仓库-&gt;Settings-&gt;Branches-&gt;Default branch中将默认分支设为xxx，save保存；然后将该仓库克隆到本地，进入该username.github.io文件目录</li>\n<li>完成上面步骤后，在当前目录使用Git Bash执行git branch命令查看当前所在分支，应为新建的分支xxx</li>\n</ul>\n<h4 id=\"将本地博客的部署文件拷贝进username-github-io文件目录\"><a href=\"#将本地博客的部署文件拷贝进username-github-io文件目录\" class=\"headerlink\" title=\"将本地博客的部署文件拷贝进username.github.io文件目录\"></a>将本地博客的部署文件拷贝进username.github.io文件目录</h4><ul>\n<li>如题，先将本地博客的部署文件（Hexo目录下的全部文件）全部拷贝进username.github.io文件目录中去。</li>\n<li>接下来，进入username.github.io文件目录下，将该目录下的全部文件提交到xxx分支，提交之前需注意：<ul>\n<li>将themes目录以内中的主题的.git目录删除（如果有），因为一个git仓库中不能包含另一个git仓库，提交主题文件夹会失败。</li>\n<li>可能有人会问，删除了themes目录中的.git不就不能git pull更新主题了吗，很简单，需要更新主题时在另一个地方git clone下来该主题的最新版本，然后将内容拷到当前主题目</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"提交hexo分支\"><a href=\"#提交hexo分支\" class=\"headerlink\" title=\"提交hexo分支\"></a>提交hexo分支</h4><ul>\n<li><p>执行git add .、git commit -m ‘back up hexo files’（引号内容可改）、git push即可将博客的hexo部署环境提交到GitHub个人仓库的xxx分支：</p>\n<p>现在可以在GitHub上的username.github.io仓库看到两个分支的差异了。<br>master分支和xxx分支各自保存着一个版本，master分支用于保存博客静态资源，提供博客页面供人访问；xxx分支用于备份博客部署文件，供自己维护更新，两者在一个GitHub仓库内互不冲突。</p>\n</li>\n</ul>\n<h3 id=\"其他任何一台电脑\"><a href=\"#其他任何一台电脑\" class=\"headerlink\" title=\"其他任何一台电脑\"></a>其他任何一台电脑</h3><p>至此，你的博客已经可以在其他电脑上进行同步的维护和更新了，方法很简单：</p>\n<ul>\n<li>将新电脑的生成的ssh key添加到GitHub账户上</li>\n<li>在新电脑上克隆username.github.io仓库的xxx分支到本地，此时本地git仓库处于xxx分支</li>\n<li>切换到username.github.io目录，执行npm install(由于仓库有一个.gitignore文件，里面默认是忽略掉 node_modules文件夹的，也就是说仓库的hexo分支并没有存储该目录[也不需要]，所以需要install下)</li>\n<li>到这里了就可以开始在自己的电脑上写博客了！</li>\n</ul>\n<p>编辑、撰写文章或其他博客更新改动：</p>\n<ul>\n<li>依次执行git add .、git commit -m ‘back up hexo files’（引号内容可改）、git push指令，保证xxx分支版本最新</li>\n<li>执行hexo d -g指令（在此之前，有时可能需要执行hexo clean），完成后就会发现，最新改动已经更新到master分支了，两个分支互不干扰！</li>\n</ul>\n<h3 id=\"回到hexo服务器端电脑更新并提交博客\"><a href=\"#回到hexo服务器端电脑更新并提交博客\" class=\"headerlink\" title=\"回到hexo服务器端电脑更新并提交博客\"></a>回到hexo服务器端电脑更新并提交博客</h3><p>注：<a href=\"https://blog.csdn.net/qq_41684957/article/details/90680765\">原地址</a></p>\n","cover_type":"img","excerpt":"","more":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>使用<a href=\"https://hexo.io/zh-cn/\">hexo</a>写博客的一个问题就是源文件都是在本地的，如果换了电脑需要更新博客时就会比较麻烦。目前，觉得比较靠谱的办法就是用github来管理了。</p>\n<ul>\n<li>利用git分支实现</li>\n<li>hexo生成的静态博客文件默认放在master分支上。</li>\n<li>hexo的源文件（部署环境文件）可以都放在hexo分支上（可以新创建一个hexo分支），换新电脑时，直接git clone hexo分支</li>\n</ul>\n<h3 id=\"hexo搭建博客原理\"><a href=\"#hexo搭建博客原理\" class=\"headerlink\" title=\"hexo搭建博客原理\"></a>hexo搭建博客原理</h3><ul>\n<li>hexo帮助把博客发送到github，同时把md文件转换成网页文件。</li>\n<li>hexo目录下的文件和github上的文件是不同的，public文件夹的文件通过hexo d 上传到github去了，其他的文件则留在本地目录下。</li>\n</ul>\n<h3 id=\"搭建hexo服务器端电脑设置\"><a href=\"#搭建hexo服务器端电脑设置\" class=\"headerlink\" title=\"搭建hexo服务器端电脑设置\"></a>搭建hexo服务器端电脑设置</h3><h4 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h4><ul>\n<li>首先确保自己已经使用hexo在<a href=\"https://so.csdn.net/so/search?q=github&amp;spm=1001.2101.3001.7020\">github</a>搭建好了自己的个人博客。</li>\n</ul>\n<h4 id=\"对username-github-io仓库新建hexo分支，并克隆\"><a href=\"#对username-github-io仓库新建hexo分支，并克隆\" class=\"headerlink\" title=\"对username.github.io仓库新建hexo分支，并克隆\"></a>对username.github.io仓库新建hexo分支，并克隆</h4><ul>\n<li>在Github的username.github.io仓库上新建一个xxx分支，并切换到该分支，并在该仓库-&gt;Settings-&gt;Branches-&gt;Default branch中将默认分支设为xxx，save保存；然后将该仓库克隆到本地，进入该username.github.io文件目录</li>\n<li>完成上面步骤后，在当前目录使用Git Bash执行git branch命令查看当前所在分支，应为新建的分支xxx</li>\n</ul>\n<h4 id=\"将本地博客的部署文件拷贝进username-github-io文件目录\"><a href=\"#将本地博客的部署文件拷贝进username-github-io文件目录\" class=\"headerlink\" title=\"将本地博客的部署文件拷贝进username.github.io文件目录\"></a>将本地博客的部署文件拷贝进username.github.io文件目录</h4><ul>\n<li>如题，先将本地博客的部署文件（Hexo目录下的全部文件）全部拷贝进username.github.io文件目录中去。</li>\n<li>接下来，进入username.github.io文件目录下，将该目录下的全部文件提交到xxx分支，提交之前需注意：<ul>\n<li>将themes目录以内中的主题的.git目录删除（如果有），因为一个git仓库中不能包含另一个git仓库，提交主题文件夹会失败。</li>\n<li>可能有人会问，删除了themes目录中的.git不就不能git pull更新主题了吗，很简单，需要更新主题时在另一个地方git clone下来该主题的最新版本，然后将内容拷到当前主题目</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"提交hexo分支\"><a href=\"#提交hexo分支\" class=\"headerlink\" title=\"提交hexo分支\"></a>提交hexo分支</h4><ul>\n<li><p>执行git add .、git commit -m ‘back up hexo files’（引号内容可改）、git push即可将博客的hexo部署环境提交到GitHub个人仓库的xxx分支：</p>\n<p>现在可以在GitHub上的username.github.io仓库看到两个分支的差异了。<br>master分支和xxx分支各自保存着一个版本，master分支用于保存博客静态资源，提供博客页面供人访问；xxx分支用于备份博客部署文件，供自己维护更新，两者在一个GitHub仓库内互不冲突。</p>\n</li>\n</ul>\n<h3 id=\"其他任何一台电脑\"><a href=\"#其他任何一台电脑\" class=\"headerlink\" title=\"其他任何一台电脑\"></a>其他任何一台电脑</h3><p>至此，你的博客已经可以在其他电脑上进行同步的维护和更新了，方法很简单：</p>\n<ul>\n<li>将新电脑的生成的ssh key添加到GitHub账户上</li>\n<li>在新电脑上克隆username.github.io仓库的xxx分支到本地，此时本地git仓库处于xxx分支</li>\n<li>切换到username.github.io目录，执行npm install(由于仓库有一个.gitignore文件，里面默认是忽略掉 node_modules文件夹的，也就是说仓库的hexo分支并没有存储该目录[也不需要]，所以需要install下)</li>\n<li>到这里了就可以开始在自己的电脑上写博客了！</li>\n</ul>\n<p>编辑、撰写文章或其他博客更新改动：</p>\n<ul>\n<li>依次执行git add .、git commit -m ‘back up hexo files’（引号内容可改）、git push指令，保证xxx分支版本最新</li>\n<li>执行hexo d -g指令（在此之前，有时可能需要执行hexo clean），完成后就会发现，最新改动已经更新到master分支了，两个分支互不干扰！</li>\n</ul>\n<h3 id=\"回到hexo服务器端电脑更新并提交博客\"><a href=\"#回到hexo服务器端电脑更新并提交博客\" class=\"headerlink\" title=\"回到hexo服务器端电脑更新并提交博客\"></a>回到hexo服务器端电脑更新并提交博客</h3><p>注：<a href=\"https://blog.csdn.net/qq_41684957/article/details/90680765\">原地址</a></p>\n"},{"title":"Mybatis下Mapper文件例子","cover":"/img/cover/5.jpg","hide":false,"date":"2024-06-03T03:39:03.000Z","keywords":null,"description":null,"top_img":null,"comments":1,"toc":null,"toc_number":null,"toc_style_simple":null,"copyright":null,"copyright_author":null,"copyright_author_href":null,"copyright_url":null,"copyright_info":null,"mathjax":null,"katex":null,"aplayer":null,"highlight_shrink":null,"aside":null,"abcjs":null,"_content":"\n### 前言\n\n记一下Mybatis的常用写法，其中也有一些mybatis-plus的写法文档。\n\n----\n\n### choose 用法\n\n```xml\n<choose>\n    <when test=\"reqVo.inspectionType == 3\">\n        SQL1...\n    </when>\n    <when test=\"reqVo.inspectionType == 4\">\n        SQL2...\n    </when>\n    <otherwise>\n        SQL3...\n    </otherwise>\n</choose>\n```\n\n### foreach 用法\n\n```xml\n<foreach collection=\"categoryIds\" open=\"(\" separator=\",\" close=\")\" item=\"categoryId\">\n    #{categoryId}\n</foreach>\n```\n\n","source":"_posts/db/mybatis-mapper.md","raw":"---\n\ntitle: Mybatis下Mapper文件例子\ncover: /img/cover/5.jpg\nhide: false\ndate: 2024-06-03 11:39:03\npermalink: db/mybatis-mapper.html\ntags: \n - Mysql\n - Mybatis\ncategories:\n - 数据库\nkeywords:\ndescription:\ntop_img:\ncomments:\ntoc:\ntoc_number:\ntoc_style_simple:\ncopyright:\ncopyright_author:\ncopyright_author_href:\ncopyright_url:\ncopyright_info:\nmathjax:\nkatex:\naplayer:\nhighlight_shrink:\naside:\nabcjs:\n---\n\n### 前言\n\n记一下Mybatis的常用写法，其中也有一些mybatis-plus的写法文档。\n\n----\n\n### choose 用法\n\n```xml\n<choose>\n    <when test=\"reqVo.inspectionType == 3\">\n        SQL1...\n    </when>\n    <when test=\"reqVo.inspectionType == 4\">\n        SQL2...\n    </when>\n    <otherwise>\n        SQL3...\n    </otherwise>\n</choose>\n```\n\n### foreach 用法\n\n```xml\n<foreach collection=\"categoryIds\" open=\"(\" separator=\",\" close=\")\" item=\"categoryId\">\n    #{categoryId}\n</foreach>\n```\n\n","slug":"db/mybatis-mapper","published":1,"updated":"2024-06-03T03:54:09.646Z","__permalink":"db/mybatis-mapper.html","_id":"clwyf8zbu00007lqfas2b6scs","layout":"post","photos":[],"content":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>记一下Mybatis的常用写法，其中也有一些mybatis-plus的写法文档。</p>\n<hr>\n<h3 id=\"choose-用法\"><a href=\"#choose-用法\" class=\"headerlink\" title=\"choose 用法\"></a>choose 用法</h3><figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">choose</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">when</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;reqVo.inspectionType == 3&quot;</span>&gt;</span></span><br><span class=\"line\">        SQL1...</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">when</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">when</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;reqVo.inspectionType == 4&quot;</span>&gt;</span></span><br><span class=\"line\">        SQL2...</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">when</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">otherwise</span>&gt;</span></span><br><span class=\"line\">        SQL3...</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">otherwise</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">choose</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"foreach-用法\"><a href=\"#foreach-用法\" class=\"headerlink\" title=\"foreach 用法\"></a>foreach 用法</h3><figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">foreach</span> <span class=\"attr\">collection</span>=<span class=\"string\">&quot;categoryIds&quot;</span> <span class=\"attr\">open</span>=<span class=\"string\">&quot;(&quot;</span> <span class=\"attr\">separator</span>=<span class=\"string\">&quot;,&quot;</span> <span class=\"attr\">close</span>=<span class=\"string\">&quot;)&quot;</span> <span class=\"attr\">item</span>=<span class=\"string\">&quot;categoryId&quot;</span>&gt;</span></span><br><span class=\"line\">    #&#123;categoryId&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">foreach</span>&gt;</span></span><br></pre></td></tr></table></figure>\n","cover_type":"img","excerpt":"","more":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>记一下Mybatis的常用写法，其中也有一些mybatis-plus的写法文档。</p>\n<hr>\n<h3 id=\"choose-用法\"><a href=\"#choose-用法\" class=\"headerlink\" title=\"choose 用法\"></a>choose 用法</h3><figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">choose</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">when</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;reqVo.inspectionType == 3&quot;</span>&gt;</span></span><br><span class=\"line\">        SQL1...</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">when</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">when</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;reqVo.inspectionType == 4&quot;</span>&gt;</span></span><br><span class=\"line\">        SQL2...</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">when</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">otherwise</span>&gt;</span></span><br><span class=\"line\">        SQL3...</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">otherwise</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">choose</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"foreach-用法\"><a href=\"#foreach-用法\" class=\"headerlink\" title=\"foreach 用法\"></a>foreach 用法</h3><figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">foreach</span> <span class=\"attr\">collection</span>=<span class=\"string\">&quot;categoryIds&quot;</span> <span class=\"attr\">open</span>=<span class=\"string\">&quot;(&quot;</span> <span class=\"attr\">separator</span>=<span class=\"string\">&quot;,&quot;</span> <span class=\"attr\">close</span>=<span class=\"string\">&quot;)&quot;</span> <span class=\"attr\">item</span>=<span class=\"string\">&quot;categoryId&quot;</span>&gt;</span></span><br><span class=\"line\">    #&#123;categoryId&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">foreach</span>&gt;</span></span><br></pre></td></tr></table></figure>\n"},{"title":"域名自动化更新证书","date":"2024-05-23T16:00:00.000Z","cover":"img/cover/6.jpg","_content":"\n### 前言\n\n目前免费证书的使用期限是90天，证书更新也从以前的一年一换变成了现在的三个月一换，本人自己域名加公司域名有近四十个之多，每次证书更新都是一个很费事又费时的工作，不得不进行自动化处理。\n\n----\n\n### 安装\n\n安装很简单，一个命令:\n\n```shell\ncurl https://get.acme.sh | sh -s email=my@example.com\n```\n\n创建 一个 shell 的 alias，例如 .bashrc，方便你的使用: `alias acme.sh=~/.acme.sh/acme.sh`；\n\n自动为你创建 cronjob,，每天 0:00 点自动检测所有的证书， 如果快过期了，需要更新，则会自动更新证书。\n\n注：如果没有安装crontab，可在安装crontab之后加入以下任务：\n\n```shell\n0 0 * * * \"~/.acme.sh\"/acme.sh --cron --home \"~/.acme.sh\" > /dev/null\n```\n\n### 更改服务地址\n\nacme.sh脚本默认ca服务器是zerossl，经常出错，会导致获取证书的时候一直出现：Pending，The CA is processing your order,please just wait.\n\n只需要把ca服务器改成letsencrypt 即可，虽然更改以后还是有概率出现pending，但基本2-3次即可成功。\n\n```shell\nacme.sh --set-default-ca --server letsencrypt\n```\n\n### 生成证书\n\n**acme.sh** 实现了 **acme** 协议支持的所有验证协议.，一般有两种方式验证: http 和 dns 验证。本人用的是http方式。\n\n#### http 方式需要在你的网站根目录下放置一个文件，来验证你的域名所有权,完成验证. 然后就可以生成证书了。\n\n```shell\n# 注，这里多个-d只会生成一个证书文件夹，所以，只能是www和主域名两个域名可以这样放\n# 如果是多个不同的二级域名，要每个单独执行一次\nacme.sh --issue -d mydomain.com -d www.mydomain.com --webroot /home/wwwroot/mydomain.com/\n```\n\n只需要指定域名，并指定域名所在的网站根目录。 **acme.sh** 会全自动的生成验证文件， 并放到网站的根目录，然后自动完成验证。最后会聪明的删除验证文件， 整个过程没有任何副作用。\n\n注：如果你还没有运行任何 web 服务，80 端口是空闲的，那么 acme.sh 还能假装自己是一个webserver，临时听在80 端口，完成验证:\n\n```shell\nacme.sh --issue -d mydomain.com --standalone\n```\n\n#### 安装证书\n\n前面证书生成以后，接下来需要把证书 copy 到真正需要用它的地方。\n\n注：默认生成的证书都放在安装目录下: `~/.acme.sh/`，请不要直接使用此目录下的文件，例如: 不要直接让 nginx/apache 的配置文件使用这下面的文件. 这里面的文件都是内部使用，而且目录结构可能会变化。正确的使用方法是使用 `--install-cert` 命令，并指定目标位置，然后证书文件会被copy到相应的位置，例如:\n\n##### Apache example:\n\n---\n\n```shell\n# 注：这个没试过，不过官网上文件后缀都写成了.pem，--reloadcmd 的命令也未测试\nacme.sh --install-cert -d example.com \\\n--cert-file      /path/to/certfile/in/apache/cert.pem  \\\n--key-file       /path/to/keyfile/in/apache/key.key  \\\n--fullchain-file /path/to/fullchain/certfile/apache/fullchain.pem \\\n--reloadcmd     \"service apache2 force-reload\"\n```\n\n##### Nginx example:\n\n---\n\n```shell\n# 网上文件后缀都写成了.pem，--reloadcmd 的命令改成nginx -s reload可用，\n# 如果是docker，可改成 docker exec -it 容器名 nginx -s reload \nacme.sh --install-cert -d example.com \\\n--key-file       /path/to/keyfile/in/nginx/key.key  \\\n--fullchain-file /path/to/fullchain/nginx/cert.pem \\\n--reloadcmd     \"nginx -s reload\"\n```\n\n#### 查看已安装证书信息\n\n```shell\nacme.sh --info -d example.com\n# 会输出如下内容：\nDOMAIN_CONF=/root/.acme.sh/example.com/example.com.conf\nLe_Domain=example.com\nLe_Alt=no\nLe_Webroot=dns_ali\nLe_PreHook=\nLe_PostHook=\nLe_RenewHook=\nLe_API=https://acme-v02.api.letsencrypt.org/directory\nLe_Keylength=\nLe_OrderFinalize=https://acme-v02.api.letsencrypt.org/acme/finalize/23xxxx150/781xxxx4310\nLe_LinkOrder=https://acme-v02.api.letsencrypt.org/acme/order/233xxx150/781xxxx4310\nLe_LinkCert=https://acme-v02.api.letsencrypt.org/acme/cert/04cbd28xxxxxx349ecaea8d07\nLe_CertCreateTime=1649358725\nLe_CertCreateTimeStr=Thu Apr  7 19:12:05 UTC 2022\nLe_NextRenewTimeStr=Mon Jun  6 19:12:05 UTC 2022\nLe_NextRenewTime=1654456325\nLe_RealCertPath=\nLe_RealCACertPath=\nLe_RealKeyPath=/etc/acme/example.com/privkey.pem\nLe_ReloadCmd=service nginx force-reload\nLe_RealFullChainPath=/etc/acme/example.com/chain.pem\n```\n\n#### 更新证书\n\n目前证书在 60 天以后会自动更新，你无需任何操作。 今后有可能会缩短这个时间， 不过都是自动的， 你不用关心.请确保 cronjob 正确安装，看起来是类似这样的:\n\n```shell\ncrontab  -l\n56 * * * * \"/root/.acme.sh\"/acme.sh --cron --home \"/root/.acme.sh\" > /dev/null\n```\n\n### 关于修改ReloadCmd\n\n目前修改`ReloadCmd`没有专门的命令，可以通过重新安装证书来实现修改`reloadCmd`的目的。 此外，安装证书后，相关信息是保存在`~/.acme.sh/example.com/example.conf`文件下的，内容就是`acme.sh --info -d example.com`输出的信息，不过`ReloadCmd`在文件中使用了Base64编码。理论上可以通过直接修改该文件来修改`ReloadCmd`，且修改时，无需Base64编码，直接写命令原文`acme.sh`也可以识别。 不过，`example.conf`文件的位置和内容格式以后可能会改变！`example.conf`一直都是内部使用, 后面有可能会改为用 sqlite 或者mysql 格式存储. 所以一般不建议自己修改。\n\n### 更新 acme.sh\n\n目前由于 acme 协议和 letsencrypt CA 都在频繁的更新，因此 acme.sh 也经常更新以保持同步。升级 acme.sh 到最新版 :\n\n```shell\nacme.sh --upgrade\n```\n\n如果你不想手动升级， 可以开启自动升级:\n\n```shell\n acme.sh --upgrade --auto-upgrade\n```\n\n之后，acme.sh 就会自动保持更新了。\n\n你也可以随时关闭自动更新:\n\n```shell\nacme.sh --upgrade --auto-upgrade  0\n```\n\n### 注意事项\n\n如果服务http服务设置了`return 301 https://$host$request_uri;`来跳转到https服务下，且https服务又是代理其他服务，如：\n\n```conf\nserver {\n    listen 80;\n    server_name example.com;\n    return 301 https://$host$request_uri;\n}\n\nserver {\n    listen       443 ssl;\n    server_name  example.com;\n    ssl_certificate      conf.d/cert.pem;\n    ssl_certificate_key  conf.d/key.key;\n    ssl_session_cache    shared:SSL:1m;\n    ssl_session_timeout  5m;\n    ssl_ciphers  HIGH:!aNULL:!MD5;\n    ssl_prefer_server_ciphers  on;\n    add_header X-Frame-Options \"SAMEORIGIN\";\n    add_header X-XSS-Protection \"1; mode=block\";\n    add_header X-Content-Type-Options \"nosniff\";\n\n    # 这里要加上以下设置，防止nginx找不到文件\n    location ^~ /.well-known/acme-challenge/ {\n        root /home/wwwroot/mydomain.com;\n    }\n  \n    location ^~/ {\n        proxy_pass http://127.0.0.1:10080;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header REMOTE-HOST $remote_addr;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_http_version 1.1;\n    }\n}\n```\n\n---\n\n官网地址：https://github.com/acmesh-official/acme.sh\n\n官方文档：https://github.com/acmesh-official/acme.sh/wiki/%E8%AF%B4%E6%98%8E\n","source":"_posts/network/域名自动化更新证书.md","raw":"---\ntitle: 域名自动化更新证书\ndate: 2024-05-24\npermalink: network/acme_sh.html\ncategories:\n  - 网络\ntags: \ncover: img/cover/6.jpg\n---\n\n### 前言\n\n目前免费证书的使用期限是90天，证书更新也从以前的一年一换变成了现在的三个月一换，本人自己域名加公司域名有近四十个之多，每次证书更新都是一个很费事又费时的工作，不得不进行自动化处理。\n\n----\n\n### 安装\n\n安装很简单，一个命令:\n\n```shell\ncurl https://get.acme.sh | sh -s email=my@example.com\n```\n\n创建 一个 shell 的 alias，例如 .bashrc，方便你的使用: `alias acme.sh=~/.acme.sh/acme.sh`；\n\n自动为你创建 cronjob,，每天 0:00 点自动检测所有的证书， 如果快过期了，需要更新，则会自动更新证书。\n\n注：如果没有安装crontab，可在安装crontab之后加入以下任务：\n\n```shell\n0 0 * * * \"~/.acme.sh\"/acme.sh --cron --home \"~/.acme.sh\" > /dev/null\n```\n\n### 更改服务地址\n\nacme.sh脚本默认ca服务器是zerossl，经常出错，会导致获取证书的时候一直出现：Pending，The CA is processing your order,please just wait.\n\n只需要把ca服务器改成letsencrypt 即可，虽然更改以后还是有概率出现pending，但基本2-3次即可成功。\n\n```shell\nacme.sh --set-default-ca --server letsencrypt\n```\n\n### 生成证书\n\n**acme.sh** 实现了 **acme** 协议支持的所有验证协议.，一般有两种方式验证: http 和 dns 验证。本人用的是http方式。\n\n#### http 方式需要在你的网站根目录下放置一个文件，来验证你的域名所有权,完成验证. 然后就可以生成证书了。\n\n```shell\n# 注，这里多个-d只会生成一个证书文件夹，所以，只能是www和主域名两个域名可以这样放\n# 如果是多个不同的二级域名，要每个单独执行一次\nacme.sh --issue -d mydomain.com -d www.mydomain.com --webroot /home/wwwroot/mydomain.com/\n```\n\n只需要指定域名，并指定域名所在的网站根目录。 **acme.sh** 会全自动的生成验证文件， 并放到网站的根目录，然后自动完成验证。最后会聪明的删除验证文件， 整个过程没有任何副作用。\n\n注：如果你还没有运行任何 web 服务，80 端口是空闲的，那么 acme.sh 还能假装自己是一个webserver，临时听在80 端口，完成验证:\n\n```shell\nacme.sh --issue -d mydomain.com --standalone\n```\n\n#### 安装证书\n\n前面证书生成以后，接下来需要把证书 copy 到真正需要用它的地方。\n\n注：默认生成的证书都放在安装目录下: `~/.acme.sh/`，请不要直接使用此目录下的文件，例如: 不要直接让 nginx/apache 的配置文件使用这下面的文件. 这里面的文件都是内部使用，而且目录结构可能会变化。正确的使用方法是使用 `--install-cert` 命令，并指定目标位置，然后证书文件会被copy到相应的位置，例如:\n\n##### Apache example:\n\n---\n\n```shell\n# 注：这个没试过，不过官网上文件后缀都写成了.pem，--reloadcmd 的命令也未测试\nacme.sh --install-cert -d example.com \\\n--cert-file      /path/to/certfile/in/apache/cert.pem  \\\n--key-file       /path/to/keyfile/in/apache/key.key  \\\n--fullchain-file /path/to/fullchain/certfile/apache/fullchain.pem \\\n--reloadcmd     \"service apache2 force-reload\"\n```\n\n##### Nginx example:\n\n---\n\n```shell\n# 网上文件后缀都写成了.pem，--reloadcmd 的命令改成nginx -s reload可用，\n# 如果是docker，可改成 docker exec -it 容器名 nginx -s reload \nacme.sh --install-cert -d example.com \\\n--key-file       /path/to/keyfile/in/nginx/key.key  \\\n--fullchain-file /path/to/fullchain/nginx/cert.pem \\\n--reloadcmd     \"nginx -s reload\"\n```\n\n#### 查看已安装证书信息\n\n```shell\nacme.sh --info -d example.com\n# 会输出如下内容：\nDOMAIN_CONF=/root/.acme.sh/example.com/example.com.conf\nLe_Domain=example.com\nLe_Alt=no\nLe_Webroot=dns_ali\nLe_PreHook=\nLe_PostHook=\nLe_RenewHook=\nLe_API=https://acme-v02.api.letsencrypt.org/directory\nLe_Keylength=\nLe_OrderFinalize=https://acme-v02.api.letsencrypt.org/acme/finalize/23xxxx150/781xxxx4310\nLe_LinkOrder=https://acme-v02.api.letsencrypt.org/acme/order/233xxx150/781xxxx4310\nLe_LinkCert=https://acme-v02.api.letsencrypt.org/acme/cert/04cbd28xxxxxx349ecaea8d07\nLe_CertCreateTime=1649358725\nLe_CertCreateTimeStr=Thu Apr  7 19:12:05 UTC 2022\nLe_NextRenewTimeStr=Mon Jun  6 19:12:05 UTC 2022\nLe_NextRenewTime=1654456325\nLe_RealCertPath=\nLe_RealCACertPath=\nLe_RealKeyPath=/etc/acme/example.com/privkey.pem\nLe_ReloadCmd=service nginx force-reload\nLe_RealFullChainPath=/etc/acme/example.com/chain.pem\n```\n\n#### 更新证书\n\n目前证书在 60 天以后会自动更新，你无需任何操作。 今后有可能会缩短这个时间， 不过都是自动的， 你不用关心.请确保 cronjob 正确安装，看起来是类似这样的:\n\n```shell\ncrontab  -l\n56 * * * * \"/root/.acme.sh\"/acme.sh --cron --home \"/root/.acme.sh\" > /dev/null\n```\n\n### 关于修改ReloadCmd\n\n目前修改`ReloadCmd`没有专门的命令，可以通过重新安装证书来实现修改`reloadCmd`的目的。 此外，安装证书后，相关信息是保存在`~/.acme.sh/example.com/example.conf`文件下的，内容就是`acme.sh --info -d example.com`输出的信息，不过`ReloadCmd`在文件中使用了Base64编码。理论上可以通过直接修改该文件来修改`ReloadCmd`，且修改时，无需Base64编码，直接写命令原文`acme.sh`也可以识别。 不过，`example.conf`文件的位置和内容格式以后可能会改变！`example.conf`一直都是内部使用, 后面有可能会改为用 sqlite 或者mysql 格式存储. 所以一般不建议自己修改。\n\n### 更新 acme.sh\n\n目前由于 acme 协议和 letsencrypt CA 都在频繁的更新，因此 acme.sh 也经常更新以保持同步。升级 acme.sh 到最新版 :\n\n```shell\nacme.sh --upgrade\n```\n\n如果你不想手动升级， 可以开启自动升级:\n\n```shell\n acme.sh --upgrade --auto-upgrade\n```\n\n之后，acme.sh 就会自动保持更新了。\n\n你也可以随时关闭自动更新:\n\n```shell\nacme.sh --upgrade --auto-upgrade  0\n```\n\n### 注意事项\n\n如果服务http服务设置了`return 301 https://$host$request_uri;`来跳转到https服务下，且https服务又是代理其他服务，如：\n\n```conf\nserver {\n    listen 80;\n    server_name example.com;\n    return 301 https://$host$request_uri;\n}\n\nserver {\n    listen       443 ssl;\n    server_name  example.com;\n    ssl_certificate      conf.d/cert.pem;\n    ssl_certificate_key  conf.d/key.key;\n    ssl_session_cache    shared:SSL:1m;\n    ssl_session_timeout  5m;\n    ssl_ciphers  HIGH:!aNULL:!MD5;\n    ssl_prefer_server_ciphers  on;\n    add_header X-Frame-Options \"SAMEORIGIN\";\n    add_header X-XSS-Protection \"1; mode=block\";\n    add_header X-Content-Type-Options \"nosniff\";\n\n    # 这里要加上以下设置，防止nginx找不到文件\n    location ^~ /.well-known/acme-challenge/ {\n        root /home/wwwroot/mydomain.com;\n    }\n  \n    location ^~/ {\n        proxy_pass http://127.0.0.1:10080;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header REMOTE-HOST $remote_addr;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_http_version 1.1;\n    }\n}\n```\n\n---\n\n官网地址：https://github.com/acmesh-official/acme.sh\n\n官方文档：https://github.com/acmesh-official/acme.sh/wiki/%E8%AF%B4%E6%98%8E\n","slug":"network/域名自动化更新证书","published":1,"updated":"2024-06-07T13:04:37.591Z","__permalink":"network/acme_sh.html","_id":"clwyftmq1000d7lqf4o59g0du","comments":1,"layout":"post","photos":[],"content":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>目前免费证书的使用期限是90天，证书更新也从以前的一年一换变成了现在的三个月一换，本人自己域名加公司域名有近四十个之多，每次证书更新都是一个很费事又费时的工作，不得不进行自动化处理。</p>\n<hr>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><p>安装很简单，一个命令:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">curl https://get.acme.sh | sh -s email=my@example.com</span><br></pre></td></tr></table></figure>\n<p>创建 一个 shell 的 alias，例如 .bashrc，方便你的使用: <code>alias acme.sh=~/.acme.sh/acme.sh</code>；</p>\n<p>自动为你创建 cronjob,，每天 0:00 点自动检测所有的证书， 如果快过期了，需要更新，则会自动更新证书。</p>\n<p>注：如果没有安装crontab，可在安装crontab之后加入以下任务：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">0 0 * * * &quot;~/.acme.sh&quot;/acme.sh --cron --home &quot;~/.acme.sh&quot; &gt; /dev/null</span><br></pre></td></tr></table></figure>\n<h3 id=\"更改服务地址\"><a href=\"#更改服务地址\" class=\"headerlink\" title=\"更改服务地址\"></a>更改服务地址</h3><p>acme.sh脚本默认ca服务器是zerossl，经常出错，会导致获取证书的时候一直出现：Pending，The CA is processing your order,please just wait.</p>\n<p>只需要把ca服务器改成letsencrypt 即可，虽然更改以后还是有概率出现pending，但基本2-3次即可成功。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">acme.sh --set-default-ca --server letsencrypt</span><br></pre></td></tr></table></figure>\n<h3 id=\"生成证书\"><a href=\"#生成证书\" class=\"headerlink\" title=\"生成证书\"></a>生成证书</h3><p><strong>acme.sh</strong> 实现了 <strong>acme</strong> 协议支持的所有验证协议.，一般有两种方式验证: http 和 dns 验证。本人用的是http方式。</p>\n<h4 id=\"http-方式需要在你的网站根目录下放置一个文件，来验证你的域名所有权-完成验证-然后就可以生成证书了。\"><a href=\"#http-方式需要在你的网站根目录下放置一个文件，来验证你的域名所有权-完成验证-然后就可以生成证书了。\" class=\"headerlink\" title=\"http 方式需要在你的网站根目录下放置一个文件，来验证你的域名所有权,完成验证. 然后就可以生成证书了。\"></a>http 方式需要在你的网站根目录下放置一个文件，来验证你的域名所有权,完成验证. 然后就可以生成证书了。</h4><figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">注，这里多个-d只会生成一个证书文件夹，所以，只能是www和主域名两个域名可以这样放</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">如果是多个不同的二级域名，要每个单独执行一次</span></span><br><span class=\"line\">acme.sh --issue -d mydomain.com -d www.mydomain.com --webroot /home/wwwroot/mydomain.com/</span><br></pre></td></tr></table></figure>\n<p>只需要指定域名，并指定域名所在的网站根目录。 <strong>acme.sh</strong> 会全自动的生成验证文件， 并放到网站的根目录，然后自动完成验证。最后会聪明的删除验证文件， 整个过程没有任何副作用。</p>\n<p>注：如果你还没有运行任何 web 服务，80 端口是空闲的，那么 acme.sh 还能假装自己是一个webserver，临时听在80 端口，完成验证:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">acme.sh --issue -d mydomain.com --standalone</span><br></pre></td></tr></table></figure>\n<h4 id=\"安装证书\"><a href=\"#安装证书\" class=\"headerlink\" title=\"安装证书\"></a>安装证书</h4><p>前面证书生成以后，接下来需要把证书 copy 到真正需要用它的地方。</p>\n<p>注：默认生成的证书都放在安装目录下: <code>~/.acme.sh/</code>，请不要直接使用此目录下的文件，例如: 不要直接让 nginx/apache 的配置文件使用这下面的文件. 这里面的文件都是内部使用，而且目录结构可能会变化。正确的使用方法是使用 <code>--install-cert</code> 命令，并指定目标位置，然后证书文件会被copy到相应的位置，例如:</p>\n<h5 id=\"Apache-example\"><a href=\"#Apache-example\" class=\"headerlink\" title=\"Apache example:\"></a>Apache example:</h5><hr>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">注：这个没试过，不过官网上文件后缀都写成了.pem，--reloadcmd 的命令也未测试</span></span><br><span class=\"line\">acme.sh --install-cert -d example.com \\</span><br><span class=\"line\">--cert-file      /path/to/certfile/in/apache/cert.pem  \\</span><br><span class=\"line\">--key-file       /path/to/keyfile/in/apache/key.key  \\</span><br><span class=\"line\">--fullchain-file /path/to/fullchain/certfile/apache/fullchain.pem \\</span><br><span class=\"line\">--reloadcmd     &quot;service apache2 force-reload&quot;</span><br></pre></td></tr></table></figure>\n<h5 id=\"Nginx-example\"><a href=\"#Nginx-example\" class=\"headerlink\" title=\"Nginx example:\"></a>Nginx example:</h5><hr>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">网上文件后缀都写成了.pem，--reloadcmd 的命令改成nginx -s reload可用，</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">如果是docker，可改成 docker <span class=\"built_in\">exec</span> -it 容器名 nginx -s reload</span> </span><br><span class=\"line\">acme.sh --install-cert -d example.com \\</span><br><span class=\"line\">--key-file       /path/to/keyfile/in/nginx/key.key  \\</span><br><span class=\"line\">--fullchain-file /path/to/fullchain/nginx/cert.pem \\</span><br><span class=\"line\">--reloadcmd     &quot;nginx -s reload&quot;</span><br></pre></td></tr></table></figure>\n<h4 id=\"查看已安装证书信息\"><a href=\"#查看已安装证书信息\" class=\"headerlink\" title=\"查看已安装证书信息\"></a>查看已安装证书信息</h4><figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">acme.sh --info -d example.com</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">会输出如下内容：</span></span><br><span class=\"line\">DOMAIN_CONF=/root/.acme.sh/example.com/example.com.conf</span><br><span class=\"line\">Le_Domain=example.com</span><br><span class=\"line\">Le_Alt=no</span><br><span class=\"line\">Le_Webroot=dns_ali</span><br><span class=\"line\">Le_PreHook=</span><br><span class=\"line\">Le_PostHook=</span><br><span class=\"line\">Le_RenewHook=</span><br><span class=\"line\">Le_API=https://acme-v02.api.letsencrypt.org/directory</span><br><span class=\"line\">Le_Keylength=</span><br><span class=\"line\">Le_OrderFinalize=https://acme-v02.api.letsencrypt.org/acme/finalize/23xxxx150/781xxxx4310</span><br><span class=\"line\">Le_LinkOrder=https://acme-v02.api.letsencrypt.org/acme/order/233xxx150/781xxxx4310</span><br><span class=\"line\">Le_LinkCert=https://acme-v02.api.letsencrypt.org/acme/cert/04cbd28xxxxxx349ecaea8d07</span><br><span class=\"line\">Le_CertCreateTime=1649358725</span><br><span class=\"line\">Le_CertCreateTimeStr=Thu Apr  7 19:12:05 UTC 2022</span><br><span class=\"line\">Le_NextRenewTimeStr=Mon Jun  6 19:12:05 UTC 2022</span><br><span class=\"line\">Le_NextRenewTime=1654456325</span><br><span class=\"line\">Le_RealCertPath=</span><br><span class=\"line\">Le_RealCACertPath=</span><br><span class=\"line\">Le_RealKeyPath=/etc/acme/example.com/privkey.pem</span><br><span class=\"line\">Le_ReloadCmd=service nginx force-reload</span><br><span class=\"line\">Le_RealFullChainPath=/etc/acme/example.com/chain.pem</span><br></pre></td></tr></table></figure>\n<h4 id=\"更新证书\"><a href=\"#更新证书\" class=\"headerlink\" title=\"更新证书\"></a>更新证书</h4><p>目前证书在 60 天以后会自动更新，你无需任何操作。 今后有可能会缩短这个时间， 不过都是自动的， 你不用关心.请确保 cronjob 正确安装，看起来是类似这样的:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">crontab  -l</span><br><span class=\"line\">56 * * * * &quot;/root/.acme.sh&quot;/acme.sh --cron --home &quot;/root/.acme.sh&quot; &gt; /dev/null</span><br></pre></td></tr></table></figure>\n<h3 id=\"关于修改ReloadCmd\"><a href=\"#关于修改ReloadCmd\" class=\"headerlink\" title=\"关于修改ReloadCmd\"></a>关于修改ReloadCmd</h3><p>目前修改<code>ReloadCmd</code>没有专门的命令，可以通过重新安装证书来实现修改<code>reloadCmd</code>的目的。 此外，安装证书后，相关信息是保存在<code>~/.acme.sh/example.com/example.conf</code>文件下的，内容就是<code>acme.sh --info -d example.com</code>输出的信息，不过<code>ReloadCmd</code>在文件中使用了Base64编码。理论上可以通过直接修改该文件来修改<code>ReloadCmd</code>，且修改时，无需Base64编码，直接写命令原文<code>acme.sh</code>也可以识别。 不过，<code>example.conf</code>文件的位置和内容格式以后可能会改变！<code>example.conf</code>一直都是内部使用, 后面有可能会改为用 sqlite 或者mysql 格式存储. 所以一般不建议自己修改。</p>\n<h3 id=\"更新-acme-sh\"><a href=\"#更新-acme-sh\" class=\"headerlink\" title=\"更新 acme.sh\"></a>更新 acme.sh</h3><p>目前由于 acme 协议和 letsencrypt CA 都在频繁的更新，因此 acme.sh 也经常更新以保持同步。升级 acme.sh 到最新版 :</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">acme.sh --upgrade</span><br></pre></td></tr></table></figure>\n<p>如果你不想手动升级， 可以开启自动升级:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">acme.sh --upgrade --auto-upgrade</span><br></pre></td></tr></table></figure>\n<p>之后，acme.sh 就会自动保持更新了。</p>\n<p>你也可以随时关闭自动更新:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">acme.sh --upgrade --auto-upgrade  0</span><br></pre></td></tr></table></figure>\n<h3 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h3><p>如果服务http服务设置了<code>return 301 https://$host$request_uri;</code>来跳转到https服务下，且https服务又是代理其他服务，如：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">    listen 80;</span><br><span class=\"line\">    server_name example.com;</span><br><span class=\"line\">    return 301 https://$host$request_uri;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">server &#123;</span><br><span class=\"line\">    listen       443 ssl;</span><br><span class=\"line\">    server_name  example.com;</span><br><span class=\"line\">    ssl_certificate      conf.d/cert.pem;</span><br><span class=\"line\">    ssl_certificate_key  conf.d/key.key;</span><br><span class=\"line\">    ssl_session_cache    shared:SSL:1m;</span><br><span class=\"line\">    ssl_session_timeout  5m;</span><br><span class=\"line\">    ssl_ciphers  HIGH:!aNULL:!MD5;</span><br><span class=\"line\">    ssl_prefer_server_ciphers  on;</span><br><span class=\"line\">    add_header X-Frame-Options &quot;SAMEORIGIN&quot;;</span><br><span class=\"line\">    add_header X-XSS-Protection &quot;1; mode=block&quot;;</span><br><span class=\"line\">    add_header X-Content-Type-Options &quot;nosniff&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">    # 这里要加上以下设置，防止nginx找不到文件</span><br><span class=\"line\">    location ^~ /.well-known/acme-challenge/ &#123;</span><br><span class=\"line\">        root /home/wwwroot/mydomain.com;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">    location ^~/ &#123;</span><br><span class=\"line\">        proxy_pass http://127.0.0.1:10080;</span><br><span class=\"line\">        proxy_set_header Host $host;</span><br><span class=\"line\">        proxy_set_header X-Real-IP $remote_addr;</span><br><span class=\"line\">        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class=\"line\">        proxy_set_header REMOTE-HOST $remote_addr;</span><br><span class=\"line\">        proxy_set_header Upgrade $http_upgrade;</span><br><span class=\"line\">        proxy_http_version 1.1;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<p>官网地址：<a href=\"https://github.com/acmesh-official/acme.sh\">https://github.com/acmesh-official/acme.sh</a></p>\n<p>官方文档：<a href=\"https://github.com/acmesh-official/acme.sh/wiki/%E8%AF%B4%E6%98%8E\">https://github.com/acmesh-official/acme.sh/wiki/%E8%AF%B4%E6%98%8E</a></p>\n","cover_type":"img","excerpt":"","more":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>目前免费证书的使用期限是90天，证书更新也从以前的一年一换变成了现在的三个月一换，本人自己域名加公司域名有近四十个之多，每次证书更新都是一个很费事又费时的工作，不得不进行自动化处理。</p>\n<hr>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><p>安装很简单，一个命令:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">curl https://get.acme.sh | sh -s email=my@example.com</span><br></pre></td></tr></table></figure>\n<p>创建 一个 shell 的 alias，例如 .bashrc，方便你的使用: <code>alias acme.sh=~/.acme.sh/acme.sh</code>；</p>\n<p>自动为你创建 cronjob,，每天 0:00 点自动检测所有的证书， 如果快过期了，需要更新，则会自动更新证书。</p>\n<p>注：如果没有安装crontab，可在安装crontab之后加入以下任务：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">0 0 * * * &quot;~/.acme.sh&quot;/acme.sh --cron --home &quot;~/.acme.sh&quot; &gt; /dev/null</span><br></pre></td></tr></table></figure>\n<h3 id=\"更改服务地址\"><a href=\"#更改服务地址\" class=\"headerlink\" title=\"更改服务地址\"></a>更改服务地址</h3><p>acme.sh脚本默认ca服务器是zerossl，经常出错，会导致获取证书的时候一直出现：Pending，The CA is processing your order,please just wait.</p>\n<p>只需要把ca服务器改成letsencrypt 即可，虽然更改以后还是有概率出现pending，但基本2-3次即可成功。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">acme.sh --set-default-ca --server letsencrypt</span><br></pre></td></tr></table></figure>\n<h3 id=\"生成证书\"><a href=\"#生成证书\" class=\"headerlink\" title=\"生成证书\"></a>生成证书</h3><p><strong>acme.sh</strong> 实现了 <strong>acme</strong> 协议支持的所有验证协议.，一般有两种方式验证: http 和 dns 验证。本人用的是http方式。</p>\n<h4 id=\"http-方式需要在你的网站根目录下放置一个文件，来验证你的域名所有权-完成验证-然后就可以生成证书了。\"><a href=\"#http-方式需要在你的网站根目录下放置一个文件，来验证你的域名所有权-完成验证-然后就可以生成证书了。\" class=\"headerlink\" title=\"http 方式需要在你的网站根目录下放置一个文件，来验证你的域名所有权,完成验证. 然后就可以生成证书了。\"></a>http 方式需要在你的网站根目录下放置一个文件，来验证你的域名所有权,完成验证. 然后就可以生成证书了。</h4><figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">注，这里多个-d只会生成一个证书文件夹，所以，只能是www和主域名两个域名可以这样放</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">如果是多个不同的二级域名，要每个单独执行一次</span></span><br><span class=\"line\">acme.sh --issue -d mydomain.com -d www.mydomain.com --webroot /home/wwwroot/mydomain.com/</span><br></pre></td></tr></table></figure>\n<p>只需要指定域名，并指定域名所在的网站根目录。 <strong>acme.sh</strong> 会全自动的生成验证文件， 并放到网站的根目录，然后自动完成验证。最后会聪明的删除验证文件， 整个过程没有任何副作用。</p>\n<p>注：如果你还没有运行任何 web 服务，80 端口是空闲的，那么 acme.sh 还能假装自己是一个webserver，临时听在80 端口，完成验证:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">acme.sh --issue -d mydomain.com --standalone</span><br></pre></td></tr></table></figure>\n<h4 id=\"安装证书\"><a href=\"#安装证书\" class=\"headerlink\" title=\"安装证书\"></a>安装证书</h4><p>前面证书生成以后，接下来需要把证书 copy 到真正需要用它的地方。</p>\n<p>注：默认生成的证书都放在安装目录下: <code>~/.acme.sh/</code>，请不要直接使用此目录下的文件，例如: 不要直接让 nginx/apache 的配置文件使用这下面的文件. 这里面的文件都是内部使用，而且目录结构可能会变化。正确的使用方法是使用 <code>--install-cert</code> 命令，并指定目标位置，然后证书文件会被copy到相应的位置，例如:</p>\n<h5 id=\"Apache-example\"><a href=\"#Apache-example\" class=\"headerlink\" title=\"Apache example:\"></a>Apache example:</h5><hr>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">注：这个没试过，不过官网上文件后缀都写成了.pem，--reloadcmd 的命令也未测试</span></span><br><span class=\"line\">acme.sh --install-cert -d example.com \\</span><br><span class=\"line\">--cert-file      /path/to/certfile/in/apache/cert.pem  \\</span><br><span class=\"line\">--key-file       /path/to/keyfile/in/apache/key.key  \\</span><br><span class=\"line\">--fullchain-file /path/to/fullchain/certfile/apache/fullchain.pem \\</span><br><span class=\"line\">--reloadcmd     &quot;service apache2 force-reload&quot;</span><br></pre></td></tr></table></figure>\n<h5 id=\"Nginx-example\"><a href=\"#Nginx-example\" class=\"headerlink\" title=\"Nginx example:\"></a>Nginx example:</h5><hr>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">网上文件后缀都写成了.pem，--reloadcmd 的命令改成nginx -s reload可用，</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">如果是docker，可改成 docker <span class=\"built_in\">exec</span> -it 容器名 nginx -s reload</span> </span><br><span class=\"line\">acme.sh --install-cert -d example.com \\</span><br><span class=\"line\">--key-file       /path/to/keyfile/in/nginx/key.key  \\</span><br><span class=\"line\">--fullchain-file /path/to/fullchain/nginx/cert.pem \\</span><br><span class=\"line\">--reloadcmd     &quot;nginx -s reload&quot;</span><br></pre></td></tr></table></figure>\n<h4 id=\"查看已安装证书信息\"><a href=\"#查看已安装证书信息\" class=\"headerlink\" title=\"查看已安装证书信息\"></a>查看已安装证书信息</h4><figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">acme.sh --info -d example.com</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">会输出如下内容：</span></span><br><span class=\"line\">DOMAIN_CONF=/root/.acme.sh/example.com/example.com.conf</span><br><span class=\"line\">Le_Domain=example.com</span><br><span class=\"line\">Le_Alt=no</span><br><span class=\"line\">Le_Webroot=dns_ali</span><br><span class=\"line\">Le_PreHook=</span><br><span class=\"line\">Le_PostHook=</span><br><span class=\"line\">Le_RenewHook=</span><br><span class=\"line\">Le_API=https://acme-v02.api.letsencrypt.org/directory</span><br><span class=\"line\">Le_Keylength=</span><br><span class=\"line\">Le_OrderFinalize=https://acme-v02.api.letsencrypt.org/acme/finalize/23xxxx150/781xxxx4310</span><br><span class=\"line\">Le_LinkOrder=https://acme-v02.api.letsencrypt.org/acme/order/233xxx150/781xxxx4310</span><br><span class=\"line\">Le_LinkCert=https://acme-v02.api.letsencrypt.org/acme/cert/04cbd28xxxxxx349ecaea8d07</span><br><span class=\"line\">Le_CertCreateTime=1649358725</span><br><span class=\"line\">Le_CertCreateTimeStr=Thu Apr  7 19:12:05 UTC 2022</span><br><span class=\"line\">Le_NextRenewTimeStr=Mon Jun  6 19:12:05 UTC 2022</span><br><span class=\"line\">Le_NextRenewTime=1654456325</span><br><span class=\"line\">Le_RealCertPath=</span><br><span class=\"line\">Le_RealCACertPath=</span><br><span class=\"line\">Le_RealKeyPath=/etc/acme/example.com/privkey.pem</span><br><span class=\"line\">Le_ReloadCmd=service nginx force-reload</span><br><span class=\"line\">Le_RealFullChainPath=/etc/acme/example.com/chain.pem</span><br></pre></td></tr></table></figure>\n<h4 id=\"更新证书\"><a href=\"#更新证书\" class=\"headerlink\" title=\"更新证书\"></a>更新证书</h4><p>目前证书在 60 天以后会自动更新，你无需任何操作。 今后有可能会缩短这个时间， 不过都是自动的， 你不用关心.请确保 cronjob 正确安装，看起来是类似这样的:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">crontab  -l</span><br><span class=\"line\">56 * * * * &quot;/root/.acme.sh&quot;/acme.sh --cron --home &quot;/root/.acme.sh&quot; &gt; /dev/null</span><br></pre></td></tr></table></figure>\n<h3 id=\"关于修改ReloadCmd\"><a href=\"#关于修改ReloadCmd\" class=\"headerlink\" title=\"关于修改ReloadCmd\"></a>关于修改ReloadCmd</h3><p>目前修改<code>ReloadCmd</code>没有专门的命令，可以通过重新安装证书来实现修改<code>reloadCmd</code>的目的。 此外，安装证书后，相关信息是保存在<code>~/.acme.sh/example.com/example.conf</code>文件下的，内容就是<code>acme.sh --info -d example.com</code>输出的信息，不过<code>ReloadCmd</code>在文件中使用了Base64编码。理论上可以通过直接修改该文件来修改<code>ReloadCmd</code>，且修改时，无需Base64编码，直接写命令原文<code>acme.sh</code>也可以识别。 不过，<code>example.conf</code>文件的位置和内容格式以后可能会改变！<code>example.conf</code>一直都是内部使用, 后面有可能会改为用 sqlite 或者mysql 格式存储. 所以一般不建议自己修改。</p>\n<h3 id=\"更新-acme-sh\"><a href=\"#更新-acme-sh\" class=\"headerlink\" title=\"更新 acme.sh\"></a>更新 acme.sh</h3><p>目前由于 acme 协议和 letsencrypt CA 都在频繁的更新，因此 acme.sh 也经常更新以保持同步。升级 acme.sh 到最新版 :</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">acme.sh --upgrade</span><br></pre></td></tr></table></figure>\n<p>如果你不想手动升级， 可以开启自动升级:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">acme.sh --upgrade --auto-upgrade</span><br></pre></td></tr></table></figure>\n<p>之后，acme.sh 就会自动保持更新了。</p>\n<p>你也可以随时关闭自动更新:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">acme.sh --upgrade --auto-upgrade  0</span><br></pre></td></tr></table></figure>\n<h3 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h3><p>如果服务http服务设置了<code>return 301 https://$host$request_uri;</code>来跳转到https服务下，且https服务又是代理其他服务，如：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">    listen 80;</span><br><span class=\"line\">    server_name example.com;</span><br><span class=\"line\">    return 301 https://$host$request_uri;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">server &#123;</span><br><span class=\"line\">    listen       443 ssl;</span><br><span class=\"line\">    server_name  example.com;</span><br><span class=\"line\">    ssl_certificate      conf.d/cert.pem;</span><br><span class=\"line\">    ssl_certificate_key  conf.d/key.key;</span><br><span class=\"line\">    ssl_session_cache    shared:SSL:1m;</span><br><span class=\"line\">    ssl_session_timeout  5m;</span><br><span class=\"line\">    ssl_ciphers  HIGH:!aNULL:!MD5;</span><br><span class=\"line\">    ssl_prefer_server_ciphers  on;</span><br><span class=\"line\">    add_header X-Frame-Options &quot;SAMEORIGIN&quot;;</span><br><span class=\"line\">    add_header X-XSS-Protection &quot;1; mode=block&quot;;</span><br><span class=\"line\">    add_header X-Content-Type-Options &quot;nosniff&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">    # 这里要加上以下设置，防止nginx找不到文件</span><br><span class=\"line\">    location ^~ /.well-known/acme-challenge/ &#123;</span><br><span class=\"line\">        root /home/wwwroot/mydomain.com;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">    location ^~/ &#123;</span><br><span class=\"line\">        proxy_pass http://127.0.0.1:10080;</span><br><span class=\"line\">        proxy_set_header Host $host;</span><br><span class=\"line\">        proxy_set_header X-Real-IP $remote_addr;</span><br><span class=\"line\">        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class=\"line\">        proxy_set_header REMOTE-HOST $remote_addr;</span><br><span class=\"line\">        proxy_set_header Upgrade $http_upgrade;</span><br><span class=\"line\">        proxy_http_version 1.1;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<p>官网地址：<a href=\"https://github.com/acmesh-official/acme.sh\">https://github.com/acmesh-official/acme.sh</a></p>\n<p>官方文档：<a href=\"https://github.com/acmesh-official/acme.sh/wiki/%E8%AF%B4%E6%98%8E\">https://github.com/acmesh-official/acme.sh/wiki/%E8%AF%B4%E6%98%8E</a></p>\n"},{"title":"Sql语句","cover":"/img/cover/14.jpg","hide":false,"date":"2024-06-03T09:33:25.000Z","keywords":null,"description":null,"top_img":null,"comments":1,"toc":null,"toc_number":null,"toc_style_simple":null,"copyright":null,"copyright_author":null,"copyright_author_href":null,"copyright_url":null,"copyright_info":null,"mathjax":null,"katex":null,"aplayer":null,"highlight_shrink":null,"aside":null,"abcjs":null,"_content":"\n### 前言\n\n工作中遇到的SQL查询方法、语法、和优化记录。\n\n----\n\n### SQL 方法和关键字\n\n#### GROUP_COUNT\\WM_COUNT\n\n```sql\n# mysql group_concat\n# separator 用来替换拼接字段， eg: 水果-素菜\nselect\n\tgroup_concat(c.category_name separator '-') category_name,\n\tcs.store_id\nfrom\n\tdt_category_store as cs\n\tinner join\n\tdt_category as c\n\ton \n\t\tcs.category_id = c.category_id and cs.category_type = 6\ngroup by cs.store_id\n```\n\n```sql\n# dm wm_concat 方式\nselect\n\twm_concat(c.category_name) category_name,\n\tcs.store_id\nfrom\n\tdt_category_store as cs\n\tinner join\n\tdt_category as c\n\ton \n\t\tcs.category_id = c.category_id and cs.category_type = 6\ngroup by cs.store_id\n```\n\n#### DROP（删除表｜通用）\n\n```sql\n# Mysql\nDROP TABLE 表名;\n# DM\nDROP TABLE 空间名.表名;\n```\n\n#### TRUNCATE（清空表数据｜通用）\n\n```sql\n# Mysql\nTRUNCATE TABLE 表名;\n# DM\nTRUNCATE TABLE 空间名.表名;\n```\n\n\n\n### SQL一些常用命令\n\n#### DM设置表主键是否自动递增\n\n```sql\n# OFF 开启， ON 关闭\nSET IDENTITY_INSERT 空间名.表名 ON;\n```\n\n### DM添加索引例子\n\n```sql\nCREATE OR REPLACE  INDEX \"索引名\" ON \"空间名\".\"表名\"(\"列名1\" ASC,\"列名2\" ASC,\"列名3\" ASC...) STORAGE(ON \"MAIN\", CLUSTERBTR);\n```\n\n#### DM创建表语句模版\n\n```sql\nCREATE TABLE \"空间名\".\"表名\"\n(\n\"ID\" BIGINT IDENTITY(1, 1) NOT NULL,\n\"NEIBH_ID\" BIGINT,\n\"CATEGORY_ID\" BIGINT,\n\"CATEGORY_TYPE\" VARCHAR(2),\n\"INSPECTOR_IDS\" VARCHAR(255) DEFAULT '',\n\"INSPECTOR_NAMES\" VARCHAR(255) DEFAULT '',\n\"TENANT_ID\" INT,\n\"DELETED\" BIT DEFAULT 0,\n\"CREATOR\" INT,\n\"CREATE_TIME\" TIMESTAMP(0),\n\"UPDATER\" INT,\n\"UPDATE_TIME\" TIMESTAMP(0),\nNOT CLUSTER PRIMARY KEY(\"ID\")) STORAGE(ON \"MAIN\", CLUSTERBTR) ;\n```\n\n\n\n","source":"_posts/db/sql.md","raw":"---\ntitle: Sql语句\ncover: /img/cover/14.jpg\nhide: false\ndate: 2024-06-03 17:33:25\npermalink: db/sql.html\ntags:\n - Mysql\n - DM\ncategories:\n - 数据库\nkeywords:\ndescription:\ntop_img:\ncomments:\ntoc:\ntoc_number:\ntoc_style_simple:\ncopyright:\ncopyright_author:\ncopyright_author_href:\ncopyright_url:\ncopyright_info:\nmathjax:\nkatex:\naplayer:\nhighlight_shrink:\naside:\nabcjs:\n---\n\n### 前言\n\n工作中遇到的SQL查询方法、语法、和优化记录。\n\n----\n\n### SQL 方法和关键字\n\n#### GROUP_COUNT\\WM_COUNT\n\n```sql\n# mysql group_concat\n# separator 用来替换拼接字段， eg: 水果-素菜\nselect\n\tgroup_concat(c.category_name separator '-') category_name,\n\tcs.store_id\nfrom\n\tdt_category_store as cs\n\tinner join\n\tdt_category as c\n\ton \n\t\tcs.category_id = c.category_id and cs.category_type = 6\ngroup by cs.store_id\n```\n\n```sql\n# dm wm_concat 方式\nselect\n\twm_concat(c.category_name) category_name,\n\tcs.store_id\nfrom\n\tdt_category_store as cs\n\tinner join\n\tdt_category as c\n\ton \n\t\tcs.category_id = c.category_id and cs.category_type = 6\ngroup by cs.store_id\n```\n\n#### DROP（删除表｜通用）\n\n```sql\n# Mysql\nDROP TABLE 表名;\n# DM\nDROP TABLE 空间名.表名;\n```\n\n#### TRUNCATE（清空表数据｜通用）\n\n```sql\n# Mysql\nTRUNCATE TABLE 表名;\n# DM\nTRUNCATE TABLE 空间名.表名;\n```\n\n\n\n### SQL一些常用命令\n\n#### DM设置表主键是否自动递增\n\n```sql\n# OFF 开启， ON 关闭\nSET IDENTITY_INSERT 空间名.表名 ON;\n```\n\n### DM添加索引例子\n\n```sql\nCREATE OR REPLACE  INDEX \"索引名\" ON \"空间名\".\"表名\"(\"列名1\" ASC,\"列名2\" ASC,\"列名3\" ASC...) STORAGE(ON \"MAIN\", CLUSTERBTR);\n```\n\n#### DM创建表语句模版\n\n```sql\nCREATE TABLE \"空间名\".\"表名\"\n(\n\"ID\" BIGINT IDENTITY(1, 1) NOT NULL,\n\"NEIBH_ID\" BIGINT,\n\"CATEGORY_ID\" BIGINT,\n\"CATEGORY_TYPE\" VARCHAR(2),\n\"INSPECTOR_IDS\" VARCHAR(255) DEFAULT '',\n\"INSPECTOR_NAMES\" VARCHAR(255) DEFAULT '',\n\"TENANT_ID\" INT,\n\"DELETED\" BIT DEFAULT 0,\n\"CREATOR\" INT,\n\"CREATE_TIME\" TIMESTAMP(0),\n\"UPDATER\" INT,\n\"UPDATE_TIME\" TIMESTAMP(0),\nNOT CLUSTER PRIMARY KEY(\"ID\")) STORAGE(ON \"MAIN\", CLUSTERBTR) ;\n```\n\n\n\n","slug":"db/sql","published":1,"updated":"2024-06-07T12:13:35.019Z","__permalink":"db/sql.html","_id":"clwyshhq500006uqf4enabmn2","layout":"post","photos":[],"content":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>工作中遇到的SQL查询方法、语法、和优化记录。</p>\n<hr>\n<h3 id=\"SQL-方法和关键字\"><a href=\"#SQL-方法和关键字\" class=\"headerlink\" title=\"SQL 方法和关键字\"></a>SQL 方法和关键字</h3><h4 id=\"GROUP-COUNT-WM-COUNT\"><a href=\"#GROUP-COUNT-WM-COUNT\" class=\"headerlink\" title=\"GROUP_COUNT\\WM_COUNT\"></a>GROUP_COUNT\\WM_COUNT</h4><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"># mysql group_concat</span><br><span class=\"line\"># separator 用来替换拼接字段， eg: 水果<span class=\"operator\">-</span>素菜</span><br><span class=\"line\"><span class=\"keyword\">select</span></span><br><span class=\"line\">\tgroup_concat(c.category_name separator <span class=\"string\">&#x27;-&#x27;</span>) category_name,</span><br><span class=\"line\">\tcs.store_id</span><br><span class=\"line\"><span class=\"keyword\">from</span></span><br><span class=\"line\">\tdt_category_store <span class=\"keyword\">as</span> cs</span><br><span class=\"line\">\t<span class=\"keyword\">inner</span> <span class=\"keyword\">join</span></span><br><span class=\"line\">\tdt_category <span class=\"keyword\">as</span> c</span><br><span class=\"line\">\t<span class=\"keyword\">on</span> </span><br><span class=\"line\">\t\tcs.category_id <span class=\"operator\">=</span> c.category_id <span class=\"keyword\">and</span> cs.category_type <span class=\"operator\">=</span> <span class=\"number\">6</span></span><br><span class=\"line\"><span class=\"keyword\">group</span> <span class=\"keyword\">by</span> cs.store_id</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"># dm wm_concat 方式</span><br><span class=\"line\"><span class=\"keyword\">select</span></span><br><span class=\"line\">\twm_concat(c.category_name) category_name,</span><br><span class=\"line\">\tcs.store_id</span><br><span class=\"line\"><span class=\"keyword\">from</span></span><br><span class=\"line\">\tdt_category_store <span class=\"keyword\">as</span> cs</span><br><span class=\"line\">\t<span class=\"keyword\">inner</span> <span class=\"keyword\">join</span></span><br><span class=\"line\">\tdt_category <span class=\"keyword\">as</span> c</span><br><span class=\"line\">\t<span class=\"keyword\">on</span> </span><br><span class=\"line\">\t\tcs.category_id <span class=\"operator\">=</span> c.category_id <span class=\"keyword\">and</span> cs.category_type <span class=\"operator\">=</span> <span class=\"number\">6</span></span><br><span class=\"line\"><span class=\"keyword\">group</span> <span class=\"keyword\">by</span> cs.store_id</span><br></pre></td></tr></table></figure>\n<h4 id=\"DROP（删除表｜通用）\"><a href=\"#DROP（删除表｜通用）\" class=\"headerlink\" title=\"DROP（删除表｜通用）\"></a>DROP（删除表｜通用）</h4><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"># Mysql</span><br><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">TABLE</span> 表名;</span><br><span class=\"line\"># DM</span><br><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">TABLE</span> 空间名.表名;</span><br></pre></td></tr></table></figure>\n<h4 id=\"TRUNCATE（清空表数据｜通用）\"><a href=\"#TRUNCATE（清空表数据｜通用）\" class=\"headerlink\" title=\"TRUNCATE（清空表数据｜通用）\"></a>TRUNCATE（清空表数据｜通用）</h4><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"># Mysql</span><br><span class=\"line\"><span class=\"keyword\">TRUNCATE</span> <span class=\"keyword\">TABLE</span> 表名;</span><br><span class=\"line\"># DM</span><br><span class=\"line\"><span class=\"keyword\">TRUNCATE</span> <span class=\"keyword\">TABLE</span> 空间名.表名;</span><br></pre></td></tr></table></figure>\n<h3 id=\"SQL一些常用命令\"><a href=\"#SQL一些常用命令\" class=\"headerlink\" title=\"SQL一些常用命令\"></a>SQL一些常用命令</h3><h4 id=\"DM设置表主键是否自动递增\"><a href=\"#DM设置表主键是否自动递增\" class=\"headerlink\" title=\"DM设置表主键是否自动递增\"></a>DM设置表主键是否自动递增</h4><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"># OFF 开启， <span class=\"keyword\">ON</span> 关闭</span><br><span class=\"line\"><span class=\"keyword\">SET</span> IDENTITY_INSERT 空间名.表名 <span class=\"keyword\">ON</span>;</span><br></pre></td></tr></table></figure>\n<h3 id=\"DM添加索引例子\"><a href=\"#DM添加索引例子\" class=\"headerlink\" title=\"DM添加索引例子\"></a>DM添加索引例子</h3><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">OR</span> REPLACE  INDEX &quot;索引名&quot; <span class=\"keyword\">ON</span> &quot;空间名&quot;.&quot;表名&quot;(&quot;列名1&quot; <span class=\"keyword\">ASC</span>,&quot;列名2&quot; <span class=\"keyword\">ASC</span>,&quot;列名3&quot; ASC...) STORAGE(<span class=\"keyword\">ON</span> &quot;MAIN&quot;, CLUSTERBTR);</span><br></pre></td></tr></table></figure>\n<h4 id=\"DM创建表语句模版\"><a href=\"#DM创建表语句模版\" class=\"headerlink\" title=\"DM创建表语句模版\"></a>DM创建表语句模版</h4><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> &quot;空间名&quot;.&quot;表名&quot;</span><br><span class=\"line\">(</span><br><span class=\"line\">&quot;ID&quot; <span class=\"type\">BIGINT</span> <span class=\"keyword\">IDENTITY</span>(<span class=\"number\">1</span>, <span class=\"number\">1</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">&quot;NEIBH_ID&quot; <span class=\"type\">BIGINT</span>,</span><br><span class=\"line\">&quot;CATEGORY_ID&quot; <span class=\"type\">BIGINT</span>,</span><br><span class=\"line\">&quot;CATEGORY_TYPE&quot; <span class=\"type\">VARCHAR</span>(<span class=\"number\">2</span>),</span><br><span class=\"line\">&quot;INSPECTOR_IDS&quot; <span class=\"type\">VARCHAR</span>(<span class=\"number\">255</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">&quot;INSPECTOR_NAMES&quot; <span class=\"type\">VARCHAR</span>(<span class=\"number\">255</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">&quot;TENANT_ID&quot; <span class=\"type\">INT</span>,</span><br><span class=\"line\">&quot;DELETED&quot; BIT <span class=\"keyword\">DEFAULT</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">&quot;CREATOR&quot; <span class=\"type\">INT</span>,</span><br><span class=\"line\">&quot;CREATE_TIME&quot; <span class=\"type\">TIMESTAMP</span>(<span class=\"number\">0</span>),</span><br><span class=\"line\">&quot;UPDATER&quot; <span class=\"type\">INT</span>,</span><br><span class=\"line\">&quot;UPDATE_TIME&quot; <span class=\"type\">TIMESTAMP</span>(<span class=\"number\">0</span>),</span><br><span class=\"line\"><span class=\"keyword\">NOT</span> CLUSTER <span class=\"keyword\">PRIMARY</span> KEY(&quot;ID&quot;)) STORAGE(<span class=\"keyword\">ON</span> &quot;MAIN&quot;, CLUSTERBTR) ;</span><br></pre></td></tr></table></figure>\n","cover_type":"img","excerpt":"","more":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>工作中遇到的SQL查询方法、语法、和优化记录。</p>\n<hr>\n<h3 id=\"SQL-方法和关键字\"><a href=\"#SQL-方法和关键字\" class=\"headerlink\" title=\"SQL 方法和关键字\"></a>SQL 方法和关键字</h3><h4 id=\"GROUP-COUNT-WM-COUNT\"><a href=\"#GROUP-COUNT-WM-COUNT\" class=\"headerlink\" title=\"GROUP_COUNT\\WM_COUNT\"></a>GROUP_COUNT\\WM_COUNT</h4><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"># mysql group_concat</span><br><span class=\"line\"># separator 用来替换拼接字段， eg: 水果<span class=\"operator\">-</span>素菜</span><br><span class=\"line\"><span class=\"keyword\">select</span></span><br><span class=\"line\">\tgroup_concat(c.category_name separator <span class=\"string\">&#x27;-&#x27;</span>) category_name,</span><br><span class=\"line\">\tcs.store_id</span><br><span class=\"line\"><span class=\"keyword\">from</span></span><br><span class=\"line\">\tdt_category_store <span class=\"keyword\">as</span> cs</span><br><span class=\"line\">\t<span class=\"keyword\">inner</span> <span class=\"keyword\">join</span></span><br><span class=\"line\">\tdt_category <span class=\"keyword\">as</span> c</span><br><span class=\"line\">\t<span class=\"keyword\">on</span> </span><br><span class=\"line\">\t\tcs.category_id <span class=\"operator\">=</span> c.category_id <span class=\"keyword\">and</span> cs.category_type <span class=\"operator\">=</span> <span class=\"number\">6</span></span><br><span class=\"line\"><span class=\"keyword\">group</span> <span class=\"keyword\">by</span> cs.store_id</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"># dm wm_concat 方式</span><br><span class=\"line\"><span class=\"keyword\">select</span></span><br><span class=\"line\">\twm_concat(c.category_name) category_name,</span><br><span class=\"line\">\tcs.store_id</span><br><span class=\"line\"><span class=\"keyword\">from</span></span><br><span class=\"line\">\tdt_category_store <span class=\"keyword\">as</span> cs</span><br><span class=\"line\">\t<span class=\"keyword\">inner</span> <span class=\"keyword\">join</span></span><br><span class=\"line\">\tdt_category <span class=\"keyword\">as</span> c</span><br><span class=\"line\">\t<span class=\"keyword\">on</span> </span><br><span class=\"line\">\t\tcs.category_id <span class=\"operator\">=</span> c.category_id <span class=\"keyword\">and</span> cs.category_type <span class=\"operator\">=</span> <span class=\"number\">6</span></span><br><span class=\"line\"><span class=\"keyword\">group</span> <span class=\"keyword\">by</span> cs.store_id</span><br></pre></td></tr></table></figure>\n<h4 id=\"DROP（删除表｜通用）\"><a href=\"#DROP（删除表｜通用）\" class=\"headerlink\" title=\"DROP（删除表｜通用）\"></a>DROP（删除表｜通用）</h4><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"># Mysql</span><br><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">TABLE</span> 表名;</span><br><span class=\"line\"># DM</span><br><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">TABLE</span> 空间名.表名;</span><br></pre></td></tr></table></figure>\n<h4 id=\"TRUNCATE（清空表数据｜通用）\"><a href=\"#TRUNCATE（清空表数据｜通用）\" class=\"headerlink\" title=\"TRUNCATE（清空表数据｜通用）\"></a>TRUNCATE（清空表数据｜通用）</h4><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"># Mysql</span><br><span class=\"line\"><span class=\"keyword\">TRUNCATE</span> <span class=\"keyword\">TABLE</span> 表名;</span><br><span class=\"line\"># DM</span><br><span class=\"line\"><span class=\"keyword\">TRUNCATE</span> <span class=\"keyword\">TABLE</span> 空间名.表名;</span><br></pre></td></tr></table></figure>\n<h3 id=\"SQL一些常用命令\"><a href=\"#SQL一些常用命令\" class=\"headerlink\" title=\"SQL一些常用命令\"></a>SQL一些常用命令</h3><h4 id=\"DM设置表主键是否自动递增\"><a href=\"#DM设置表主键是否自动递增\" class=\"headerlink\" title=\"DM设置表主键是否自动递增\"></a>DM设置表主键是否自动递增</h4><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"># OFF 开启， <span class=\"keyword\">ON</span> 关闭</span><br><span class=\"line\"><span class=\"keyword\">SET</span> IDENTITY_INSERT 空间名.表名 <span class=\"keyword\">ON</span>;</span><br></pre></td></tr></table></figure>\n<h3 id=\"DM添加索引例子\"><a href=\"#DM添加索引例子\" class=\"headerlink\" title=\"DM添加索引例子\"></a>DM添加索引例子</h3><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">OR</span> REPLACE  INDEX &quot;索引名&quot; <span class=\"keyword\">ON</span> &quot;空间名&quot;.&quot;表名&quot;(&quot;列名1&quot; <span class=\"keyword\">ASC</span>,&quot;列名2&quot; <span class=\"keyword\">ASC</span>,&quot;列名3&quot; ASC...) STORAGE(<span class=\"keyword\">ON</span> &quot;MAIN&quot;, CLUSTERBTR);</span><br></pre></td></tr></table></figure>\n<h4 id=\"DM创建表语句模版\"><a href=\"#DM创建表语句模版\" class=\"headerlink\" title=\"DM创建表语句模版\"></a>DM创建表语句模版</h4><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> &quot;空间名&quot;.&quot;表名&quot;</span><br><span class=\"line\">(</span><br><span class=\"line\">&quot;ID&quot; <span class=\"type\">BIGINT</span> <span class=\"keyword\">IDENTITY</span>(<span class=\"number\">1</span>, <span class=\"number\">1</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">&quot;NEIBH_ID&quot; <span class=\"type\">BIGINT</span>,</span><br><span class=\"line\">&quot;CATEGORY_ID&quot; <span class=\"type\">BIGINT</span>,</span><br><span class=\"line\">&quot;CATEGORY_TYPE&quot; <span class=\"type\">VARCHAR</span>(<span class=\"number\">2</span>),</span><br><span class=\"line\">&quot;INSPECTOR_IDS&quot; <span class=\"type\">VARCHAR</span>(<span class=\"number\">255</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">&quot;INSPECTOR_NAMES&quot; <span class=\"type\">VARCHAR</span>(<span class=\"number\">255</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">&quot;TENANT_ID&quot; <span class=\"type\">INT</span>,</span><br><span class=\"line\">&quot;DELETED&quot; BIT <span class=\"keyword\">DEFAULT</span> <span class=\"number\">0</span>,</span><br><span class=\"line\">&quot;CREATOR&quot; <span class=\"type\">INT</span>,</span><br><span class=\"line\">&quot;CREATE_TIME&quot; <span class=\"type\">TIMESTAMP</span>(<span class=\"number\">0</span>),</span><br><span class=\"line\">&quot;UPDATER&quot; <span class=\"type\">INT</span>,</span><br><span class=\"line\">&quot;UPDATE_TIME&quot; <span class=\"type\">TIMESTAMP</span>(<span class=\"number\">0</span>),</span><br><span class=\"line\"><span class=\"keyword\">NOT</span> CLUSTER <span class=\"keyword\">PRIMARY</span> KEY(&quot;ID&quot;)) STORAGE(<span class=\"keyword\">ON</span> &quot;MAIN&quot;, CLUSTERBTR) ;</span><br></pre></td></tr></table></figure>\n"},{"title":"减肥记录","cover":"/img/cover/17.jpg","hide":false,"date":"2024-06-05T15:44:16.000Z","keywords":null,"description":null,"top_img":null,"comments":1,"toc":null,"toc_number":null,"toc_style_simple":null,"copyright":null,"copyright_author":null,"copyright_author_href":null,"copyright_url":null,"copyright_info":null,"mathjax":null,"katex":null,"aplayer":null,"highlight_shrink":null,"aside":null,"abcjs":null,"_content":"\n### 前言\n\n在2022年七月，做过一次ercp手术，一个160斤的小胖子瘦到了140斤，当时天真的以为以后一定能保证自己不再胖回来，结果过年回家就胖回到了160斤，然后就自暴自弃的放弃了自己的减肥计划，也~~没再在意过自己的体重~~（没敢上称）。今天，因为怀疑小猫是不是得了猫传腹，给猫子称重时，不得不拿自己当工具，结果现在几乎到了200斤了，故今天开减肥记录的文章，以激励自己每天减肥打卡。\n\n----\n\n### 2024.06\n\n#### 第零天（6月5日｜周三）\n\n<center style=\"overflow: hidden;width: 100%;height: 600px;text-align:center\">\n    <img style=\"width: 500px;\" src=\"https://images.jzwfan.com/image/2024/06/06/000134-0.jpeg\" alt=\"\">\n</center>\n\n#### 第一天（6月6日｜周四）\n- 早饭：八宝粥一杯，鸡蛋一个\n- 中午：麻辣烫一份，忘记拍了，买的东西还没到，公司附近吃的都差不多\n- 晚上：步行回家，吃了一份煎鱼和鸡胸肉\n\n下午3点半吃了几颗糖炒花生，忘记拍了\n\n<center class=\"half\" style=\"overflow:hidden\">\n  \t<div style=\"width: 157px;height: 150px;line-height: 150px;text-align: center;float:left;padding-bottom:10px;\">\n        <img src=\"https://images.jzwfan.com/image/2024/06/07/092938-0.png\" style=\"max-width:100%;max-height:100%;vertical-align: middle; margin: 0 auto;\" alt=\"\">\n    </div>\n    <div style=\"width: 157px;height: 150px;line-height: 150px;text-align: center;float:left;padding-bottom:10px;\">\n        <img src=\"https://images.jzwfan.com/image/2024/06/07/093334-0.png\" style=\"max-width:100%;max-height:100%;vertical-align: middle; margin: 0 auto;\" alt=\"\">\n    </div>\n</center>\n\n","source":"_posts/live/减肥记录.md","raw":"---\ntitle: 减肥记录\ncover: /img/cover/17.jpg\nhide: false\ndate: 2024-06-05 23:44:16\npermalink: live/lose-weight-records.html\ntags:\n - 生活\n - 减肥\ncategories:\n - 生活\nkeywords:\ndescription:\ntop_img:\ncomments:\ntoc:\ntoc_number:\ntoc_style_simple:\ncopyright:\ncopyright_author:\ncopyright_author_href:\ncopyright_url:\ncopyright_info:\nmathjax:\nkatex:\naplayer:\nhighlight_shrink:\naside:\nabcjs:\n---\n\n### 前言\n\n在2022年七月，做过一次ercp手术，一个160斤的小胖子瘦到了140斤，当时天真的以为以后一定能保证自己不再胖回来，结果过年回家就胖回到了160斤，然后就自暴自弃的放弃了自己的减肥计划，也~~没再在意过自己的体重~~（没敢上称）。今天，因为怀疑小猫是不是得了猫传腹，给猫子称重时，不得不拿自己当工具，结果现在几乎到了200斤了，故今天开减肥记录的文章，以激励自己每天减肥打卡。\n\n----\n\n### 2024.06\n\n#### 第零天（6月5日｜周三）\n\n<center style=\"overflow: hidden;width: 100%;height: 600px;text-align:center\">\n    <img style=\"width: 500px;\" src=\"https://images.jzwfan.com/image/2024/06/06/000134-0.jpeg\" alt=\"\">\n</center>\n\n#### 第一天（6月6日｜周四）\n- 早饭：八宝粥一杯，鸡蛋一个\n- 中午：麻辣烫一份，忘记拍了，买的东西还没到，公司附近吃的都差不多\n- 晚上：步行回家，吃了一份煎鱼和鸡胸肉\n\n下午3点半吃了几颗糖炒花生，忘记拍了\n\n<center class=\"half\" style=\"overflow:hidden\">\n  \t<div style=\"width: 157px;height: 150px;line-height: 150px;text-align: center;float:left;padding-bottom:10px;\">\n        <img src=\"https://images.jzwfan.com/image/2024/06/07/092938-0.png\" style=\"max-width:100%;max-height:100%;vertical-align: middle; margin: 0 auto;\" alt=\"\">\n    </div>\n    <div style=\"width: 157px;height: 150px;line-height: 150px;text-align: center;float:left;padding-bottom:10px;\">\n        <img src=\"https://images.jzwfan.com/image/2024/06/07/093334-0.png\" style=\"max-width:100%;max-height:100%;vertical-align: middle; margin: 0 auto;\" alt=\"\">\n    </div>\n</center>\n\n","slug":"live/减肥记录","published":1,"updated":"2024-06-07T01:34:33.080Z","__permalink":"live/lose-weight-records.html","_id":"clx204ldn0000p4qffafmc75w","layout":"post","photos":[],"content":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>在2022年七月，做过一次ercp手术，一个160斤的小胖子瘦到了140斤，当时天真的以为以后一定能保证自己不再胖回来，结果过年回家就胖回到了160斤，然后就自暴自弃的放弃了自己的减肥计划，也<del>没再在意过自己的体重</del>（没敢上称）。今天，因为怀疑小猫是不是得了猫传腹，给猫子称重时，不得不拿自己当工具，结果现在几乎到了200斤了，故今天开减肥记录的文章，以激励自己每天减肥打卡。</p>\n<hr>\n<h3 id=\"2024-06\"><a href=\"#2024-06\" class=\"headerlink\" title=\"2024.06\"></a>2024.06</h3><h4 id=\"第零天（6月5日｜周三）\"><a href=\"#第零天（6月5日｜周三）\" class=\"headerlink\" title=\"第零天（6月5日｜周三）\"></a>第零天（6月5日｜周三）</h4><center style=\"overflow: hidden;width: 100%;height: 600px;text-align:center\">\n    <img style=\"width: 500px;\" src=\"https://images.jzwfan.com/image/2024/06/06/000134-0.jpeg\" alt=\"\">\n</center>\n\n<h4 id=\"第一天（6月6日｜周四）\"><a href=\"#第一天（6月6日｜周四）\" class=\"headerlink\" title=\"第一天（6月6日｜周四）\"></a>第一天（6月6日｜周四）</h4><ul>\n<li>早饭：八宝粥一杯，鸡蛋一个</li>\n<li>中午：麻辣烫一份，忘记拍了，买的东西还没到，公司附近吃的都差不多</li>\n<li>晚上：步行回家，吃了一份煎鱼和鸡胸肉</li>\n</ul>\n<p>下午3点半吃了几颗糖炒花生，忘记拍了</p>\n<center class=\"half\" style=\"overflow:hidden\">\n      <div style=\"width: 157px;height: 150px;line-height: 150px;text-align: center;float:left;padding-bottom:10px;\">\n        <img src=\"https://images.jzwfan.com/image/2024/06/07/092938-0.png\" style=\"max-width:100%;max-height:100%;vertical-align: middle; margin: 0 auto;\" alt=\"\">\n    </div>\n    <div style=\"width: 157px;height: 150px;line-height: 150px;text-align: center;float:left;padding-bottom:10px;\">\n        <img src=\"https://images.jzwfan.com/image/2024/06/07/093334-0.png\" style=\"max-width:100%;max-height:100%;vertical-align: middle; margin: 0 auto;\" alt=\"\">\n    </div>\n</center>\n\n","cover_type":"img","excerpt":"","more":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>在2022年七月，做过一次ercp手术，一个160斤的小胖子瘦到了140斤，当时天真的以为以后一定能保证自己不再胖回来，结果过年回家就胖回到了160斤，然后就自暴自弃的放弃了自己的减肥计划，也<del>没再在意过自己的体重</del>（没敢上称）。今天，因为怀疑小猫是不是得了猫传腹，给猫子称重时，不得不拿自己当工具，结果现在几乎到了200斤了，故今天开减肥记录的文章，以激励自己每天减肥打卡。</p>\n<hr>\n<h3 id=\"2024-06\"><a href=\"#2024-06\" class=\"headerlink\" title=\"2024.06\"></a>2024.06</h3><h4 id=\"第零天（6月5日｜周三）\"><a href=\"#第零天（6月5日｜周三）\" class=\"headerlink\" title=\"第零天（6月5日｜周三）\"></a>第零天（6月5日｜周三）</h4><center style=\"overflow: hidden;width: 100%;height: 600px;text-align:center\">\n    <img style=\"width: 500px;\" src=\"https://images.jzwfan.com/image/2024/06/06/000134-0.jpeg\" alt=\"\">\n</center>\n\n<h4 id=\"第一天（6月6日｜周四）\"><a href=\"#第一天（6月6日｜周四）\" class=\"headerlink\" title=\"第一天（6月6日｜周四）\"></a>第一天（6月6日｜周四）</h4><ul>\n<li>早饭：八宝粥一杯，鸡蛋一个</li>\n<li>中午：麻辣烫一份，忘记拍了，买的东西还没到，公司附近吃的都差不多</li>\n<li>晚上：步行回家，吃了一份煎鱼和鸡胸肉</li>\n</ul>\n<p>下午3点半吃了几颗糖炒花生，忘记拍了</p>\n<center class=\"half\" style=\"overflow:hidden\">\n      <div style=\"width: 157px;height: 150px;line-height: 150px;text-align: center;float:left;padding-bottom:10px;\">\n        <img src=\"https://images.jzwfan.com/image/2024/06/07/092938-0.png\" style=\"max-width:100%;max-height:100%;vertical-align: middle; margin: 0 auto;\" alt=\"\">\n    </div>\n    <div style=\"width: 157px;height: 150px;line-height: 150px;text-align: center;float:left;padding-bottom:10px;\">\n        <img src=\"https://images.jzwfan.com/image/2024/06/07/093334-0.png\" style=\"max-width:100%;max-height:100%;vertical-align: middle; margin: 0 auto;\" alt=\"\">\n    </div>\n</center>\n\n"},{"title":"css实用代码合集","cover":"/img/cover/13.jpg","hide":false,"date":"2024-06-06T08:09:43.000Z","keywords":null,"description":null,"top_img":null,"comments":1,"toc":null,"toc_number":null,"toc_style_simple":null,"copyright":null,"copyright_author":null,"copyright_author_href":null,"copyright_url":null,"copyright_info":null,"mathjax":null,"katex":null,"aplayer":null,"highlight_shrink":null,"aside":null,"abcjs":null,"_content":"\n### 前言\n记录一些在工作和写博客中遇到的一些CSS代码场景,可能这些用的不多，以后也很敢再遇到新的逻辑代码,但总要养成遇到就要记录的习惯。\n\n### img图片保持比例且居中显示\n\n 外部容器设置 固定宽度高度，设置line-height与height相等（垂直居中），设置text-align是center(水平居中)，内部img设置style（max-height:100%;max-width:100%;vertical-align: middle; [margin](https://so.csdn.net/so/search?q=margin&spm=1001.2101.3001.7020): 0 auto;）。\n\n```html\n<div style=\"width: 398px;height: 298px;line-height: 298px;text-align: center;border:1px solid #E09972\">\n    <img src=\"test.jpg\" style=\"max-width:100%;max-height:100%;vertical-align: middle; margin: 0 auto;\" alt=\"\">\n</div>\n```\n\n源地址：https://blog.csdn.net/shijie_nihao/article/details/106348591\n","source":"_posts/html/css实用代码合集.md","raw":"---\ntitle: css实用代码合集\ncover: /img/cover/13.jpg\nhide: false\ndate: 2024-06-06 16:09:43\npermalink: html/practical-css.html\ntags:\n - 前端\n - CSS\ncategories:\n - 前端\nkeywords:\ndescription:\ntop_img:\ncomments:\ntoc:\ntoc_number:\ntoc_style_simple:\ncopyright:\ncopyright_author:\ncopyright_author_href:\ncopyright_url:\ncopyright_info:\nmathjax:\nkatex:\naplayer:\nhighlight_shrink:\naside:\nabcjs:\n---\n\n### 前言\n记录一些在工作和写博客中遇到的一些CSS代码场景,可能这些用的不多，以后也很敢再遇到新的逻辑代码,但总要养成遇到就要记录的习惯。\n\n### img图片保持比例且居中显示\n\n 外部容器设置 固定宽度高度，设置line-height与height相等（垂直居中），设置text-align是center(水平居中)，内部img设置style（max-height:100%;max-width:100%;vertical-align: middle; [margin](https://so.csdn.net/so/search?q=margin&spm=1001.2101.3001.7020): 0 auto;）。\n\n```html\n<div style=\"width: 398px;height: 298px;line-height: 298px;text-align: center;border:1px solid #E09972\">\n    <img src=\"test.jpg\" style=\"max-width:100%;max-height:100%;vertical-align: middle; margin: 0 auto;\" alt=\"\">\n</div>\n```\n\n源地址：https://blog.csdn.net/shijie_nihao/article/details/106348591\n","slug":"html/css实用代码合集","published":1,"updated":"2024-06-06T08:20:02.935Z","__permalink":"html/practical-css.html","_id":"clx2ziu2g00002eqfh04le60c","layout":"post","photos":[],"content":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>记录一些在工作和写博客中遇到的一些CSS代码场景,可能这些用的不多，以后也很敢再遇到新的逻辑代码,但总要养成遇到就要记录的习惯。</p>\n<h3 id=\"img图片保持比例且居中显示\"><a href=\"#img图片保持比例且居中显示\" class=\"headerlink\" title=\"img图片保持比例且居中显示\"></a>img图片保持比例且居中显示</h3><p> 外部容器设置 固定宽度高度，设置line-height与height相等（垂直居中），设置text-align是center(水平居中)，内部img设置style（max-height:100%;max-width:100%;vertical-align: middle; <a href=\"https://so.csdn.net/so/search?q=margin&amp;spm=1001.2101.3001.7020\">margin</a>: 0 auto;）。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;width: 398px;height: 298px;line-height: 298px;text-align: center;border:1px solid #E09972&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;test.jpg&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;max-width:100%;max-height:100%;vertical-align: middle; margin: 0 auto;&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>源地址：<a href=\"https://blog.csdn.net/shijie_nihao/article/details/106348591\">https://blog.csdn.net/shijie_nihao/article/details/106348591</a></p>\n","cover_type":"img","excerpt":"","more":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>记录一些在工作和写博客中遇到的一些CSS代码场景,可能这些用的不多，以后也很敢再遇到新的逻辑代码,但总要养成遇到就要记录的习惯。</p>\n<h3 id=\"img图片保持比例且居中显示\"><a href=\"#img图片保持比例且居中显示\" class=\"headerlink\" title=\"img图片保持比例且居中显示\"></a>img图片保持比例且居中显示</h3><p> 外部容器设置 固定宽度高度，设置line-height与height相等（垂直居中），设置text-align是center(水平居中)，内部img设置style（max-height:100%;max-width:100%;vertical-align: middle; <a href=\"https://so.csdn.net/so/search?q=margin&amp;spm=1001.2101.3001.7020\">margin</a>: 0 auto;）。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;width: 398px;height: 298px;line-height: 298px;text-align: center;border:1px solid #E09972&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;test.jpg&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;max-width:100%;max-height:100%;vertical-align: middle; margin: 0 auto;&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>源地址：<a href=\"https://blog.csdn.net/shijie_nihao/article/details/106348591\">https://blog.csdn.net/shijie_nihao/article/details/106348591</a></p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"clwyf8zbu00007lqfas2b6scs","category_id":"clwyfai2k00017lqf0raz5mtd","_id":"clwyfai2r00047lqf6hfu2eew"},{"post_id":"clwyftmq1000d7lqf4o59g0du","category_id":"clwyfor6u000b7lqf4bxbbd9g","_id":"clwyftmq4000e7lqf3t7nbrjk"},{"post_id":"clwyshhq500006uqf4enabmn2","category_id":"clwyfai2k00017lqf0raz5mtd","_id":"clwyshhqc00026uqfgojt972x"},{"post_id":"clx204ldn0000p4qffafmc75w","category_id":"clx204ldq0001p4qfeneqd9t7","_id":"clx204ldw0004p4qfggq4bnnp"},{"post_id":"clx2ziu2g00002eqfh04le60c","category_id":"clx2ziu2t00012eqf32u19rem","_id":"clx2ziu3100042eqf2wl47e0u"}],"PostTag":[{"post_id":"clwlyxfax0003l8qf97ms7u9o","tag_id":"clwlyxfaz0006l8qf1cu4bd94","_id":"clwlyxfb00009l8qf9hic6h1n"},{"post_id":"clwyf8zbu00007lqfas2b6scs","tag_id":"clwyfnude00077lqf1mlz2p8t","_id":"clwyfnudm00097lqfbv20fpm2"},{"post_id":"clwyf8zbu00007lqfas2b6scs","tag_id":"clwyfnudl00087lqfet7ggt1k","_id":"clwyfnudm000a7lqf0jkj7rwr"},{"post_id":"clwyshhq500006uqf4enabmn2","tag_id":"clwyfnude00077lqf1mlz2p8t","_id":"clwyshhqd00036uqfb5cg9it0"},{"post_id":"clwyshhq500006uqf4enabmn2","tag_id":"clwyshhq900016uqf2gmve2wy","_id":"clwyshhqd00046uqf94bh2nbs"},{"post_id":"clx204ldn0000p4qffafmc75w","tag_id":"clx204lds0002p4qf9pq408wt","_id":"clx204ldw0005p4qfchx9613e"},{"post_id":"clx204ldn0000p4qffafmc75w","tag_id":"clx204ldu0003p4qfbkoya1d7","_id":"clx204ldw0006p4qfaq0d7feh"},{"post_id":"clx2ziu2g00002eqfh04le60c","tag_id":"clx2ziu2w00022eqf00ol14a0","_id":"clx2ziu3100052eqf2f6ohhbt"},{"post_id":"clx2ziu2g00002eqfh04le60c","tag_id":"clx2ziu2y00032eqf88fe2qja","_id":"clx2ziu3200062eqf3y93f4l6"}],"Tag":[{"name":"Hexo","_id":"clwlyxfaz0006l8qf1cu4bd94"},{"name":"mysql","_id":"clwyfai2l00027lqfafehep2h"},{"name":"mybatis","_id":"clwyfai2q00037lqfb03yfml3"},{"name":"Mysql","_id":"clwyfnude00077lqf1mlz2p8t"},{"name":"Mybatis","_id":"clwyfnudl00087lqfet7ggt1k"},{"name":"DM","_id":"clwyshhq900016uqf2gmve2wy"},{"name":"生活","_id":"clx204lds0002p4qf9pq408wt"},{"name":"减肥","_id":"clx204ldu0003p4qfbkoya1d7"},{"name":"前端","_id":"clx2ziu2w00022eqf00ol14a0"},{"name":"CSS","_id":"clx2ziu2y00032eqf88fe2qja"}]}}